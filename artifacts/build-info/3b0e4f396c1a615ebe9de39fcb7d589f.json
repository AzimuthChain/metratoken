{
	"id": "3b0e4f396c1a615ebe9de39fcb7d589f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Stakeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/**\n* @notice Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities\n*/\ncontract Stakeable {\n\n\n    /**\n    * @notice Constructor since this contract is not ment to be used without inheritance\n    * push once to stakeholders for it to work proplerly\n     */\n    constructor() {\n        // This push is needed so we avoid index 0 causing bug of index-1\n        stakeholders.push();\n    }\n    /**\n     * @notice\n     * A stake struct is used to represent the way we store stakes, \n     * A Stake will contain the users address, the amount staked and a timestamp, \n     * Since which is when the stake was made\n     */\n    struct Stake{\n        address user;\n        uint256 amount;\n        uint256 since;\n        // This claimable field is new and used to tell how big of a reward is currently available\n        uint256 claimable;\n    }\n    /**\n    * @notice Stakeholder is a staker that has active stakes\n     */\n    struct Stakeholder{\n        address user;\n        Stake[] address_stakes;\n        \n    }\n     /**\n     * @notice\n     * StakingSummary is a struct that is used to contain all stakes performed by a certain account\n     */ \n     struct StakingSummary{\n         uint256 total_amount;\n         Stake[] stakes;\n     }\n\n    /**\n    * @notice \n    *   This is a array where we store all Stakes that are performed on the Contract\n    *   The stakes for each address are stored at a certain index, the index can be found using the stakes mapping\n    */\n    Stakeholder[] internal stakeholders;\n    /**\n    * @notice \n    * stakes is used to keep track of the INDEX for the stakers in the stakes array\n     */\n    mapping(address => uint256) internal stakes;\n    /**\n    * @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\n     */\n     event Staked(address indexed user, uint256 amount, uint256 index, uint256 timestamp);\n\n    /**\n     * @notice\n      rewardPerHour is 100 because it is used to represent 0.001, since we only use integer numbers\n      This will give users 0.01% reward for each staked token / H\n     */\n    uint256 internal rewardPerHour = 100;\n\n    /**\n    * @notice _addStakeholder takes care of adding a stakeholder to the stakeholders array\n     */\n    function _addStakeholder(address staker) internal returns (uint256){\n        // Push a empty item to the Array to make space for our new stakeholder\n        stakeholders.push();\n        // Calculate the index of the last item in the array by Len-1\n        uint256 userIndex = stakeholders.length - 1;\n        // Assign the address to the new index\n        stakeholders[userIndex].user = staker;\n        // Add index to the stakeHolders\n        stakes[staker] = userIndex;\n        return userIndex; \n    }\n\n    /**\n    * @notice\n    * _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n    * StakeID \n    */\n    function _stake(uint256 _amount) internal{\n        // Simple check so that user does not stake 0 \n        require(_amount > 0, \"Cannot stake nothing\");\n        \n\n        // Mappings in solidity creates all values, but empty, so we can just check the address\n        uint256 index = stakes[msg.sender];\n        // block.timestamp = timestamp of the current block in seconds since the epoch\n        uint256 timestamp = block.timestamp;\n        // See if the staker already has a staked index or if its the first time\n        if(index == 0){\n            // This stakeholder stakes for the first time\n            // We need to add him to the stakeHolders and also map it into the Index of the stakes\n            // The index returned will be the index of the stakeholder in the stakeholders array\n            index = _addStakeholder(msg.sender);\n        }\n\n        // Use the index to push a new Stake\n        // push a newly created Stake with the current block timestamp.\n        stakeholders[index].address_stakes.push(Stake(msg.sender, _amount, timestamp,0));\n        // Emit an event that the stake has occured\n        emit Staked(msg.sender, _amount, index,timestamp);\n    }\n\n    /**\n      * @notice\n      * calculateStakeReward is used to calculate how much a user should be rewarded for their stakes\n      * and the duration the stake has been active\n     */\n      function calculateStakeReward(Stake memory _current_stake) internal view returns(uint256){\n          // First calculate how long the stake has been active\n          // Use current seconds since epoch - the seconds since epoch the stake was made\n          // The output will be duration in SECONDS ,\n          // We will reward the user 0.1% per Hour So thats 0.1% per 3600 seconds\n          // the alghoritm is  seconds = block.timestamp - stake seconds (block.timestap - _stake.since)\n          // hours = Seconds / 3600 (seconds /3600) 3600 is an variable in Solidity names hours\n          // we then multiply each token by the hours staked , then divide by the rewardPerHour rate \n          return (((block.timestamp - _current_stake.since) / 1 hours) * _current_stake.amount) / rewardPerHour;\n      }\n\n    /**\n     * @notice\n     * withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n     * Notice index of the stake is the users stake counter, starting at 0 for the first stake\n     * Will return the amount to MINT onto the acount\n     * Will also calculateStakeReward and reset timer\n    */\n     function _withdrawStake(uint256 amount, uint256 index) internal returns(uint256){\n         // Grab user_index which is the index to use to grab the Stake[]\n        uint256 user_index = stakes[msg.sender];\n        Stake memory current_stake = stakeholders[user_index].address_stakes[index];\n        require(current_stake.amount >= amount, \"Staking: Cannot withdraw more than you have staked\");\n\n         // Calculate available Reward first before we start modifying data\n         uint256 reward = calculateStakeReward(current_stake);\n         // Remove by subtracting the money unstaked \n         current_stake.amount = current_stake.amount - amount;\n         // If stake is empty, 0, then remove it from the array of stakes\n         if(current_stake.amount == 0){\n             delete stakeholders[user_index].address_stakes[index];\n         }else {\n             // If not empty then replace the value of it\n             stakeholders[user_index].address_stakes[index].amount = current_stake.amount;\n             // Reset timer of stake\n            stakeholders[user_index].address_stakes[index].since = block.timestamp;    \n         }\n\n         return amount + reward;\n     }\n\n     /**\n     * @notice\n     * hasStake is used to check if a account has stakes and the total amount along with all the seperate stakes\n     */\n    function hasStake(address _staker) public view returns(StakingSummary memory){\n        // totalStakeAmount is used to count total staked amount of the address\n        uint256 totalStakeAmount; \n        // Keep a summary in memory since we need to calculate this\n        StakingSummary memory summary = StakingSummary(0, stakeholders[stakes[_staker]].address_stakes);\n        // Itterate all stakes and grab amount of stakes\n        for (uint256 s = 0; s < summary.stakes.length; s += 1){\n           uint256 availableReward = calculateStakeReward(summary.stakes[s]);\n           summary.stakes[s].claimable = availableReward;\n           totalStakeAmount = totalStakeAmount+summary.stakes[s].amount;\n       }\n       // Assign calculate amount to summary\n       summary.total_amount = totalStakeAmount;\n        return summary;\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Stakeable.sol": {
				"Stakeable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "hasStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "total_amount",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "user",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "since",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable",
													"type": "uint256"
												}
											],
											"internalType": "struct Stakeable.Stake[]",
											"name": "stakes",
											"type": "tuple[]"
										}
									],
									"internalType": "struct Stakeable.StakingSummary",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Stakeable.sol\":176:7724  contract Stakeable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Stakeable.sol\":2222:2225  100 */\n  0x64\n    /* \"contracts/Stakeable.sol\":2189:2225  uint256 internal rewardPerHour = 100 */\n  0x02\n  sstore\n    /* \"contracts/Stakeable.sol\":365:489  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Stakeable.sol\":463:475  stakeholders */\n  0x00\n    /* \"contracts/Stakeable.sol\":463:482  stakeholders.push() */\n  0x01\n  dup2\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  pop\n  pop\n    /* \"contracts/Stakeable.sol\":176:7724  contract Stakeable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Stakeable.sol\":176:7724  contract Stakeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xe73e14bf\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Stakeable.sol\":6893:7721  function hasStake(address _staker) public view returns(StakingSummary memory){... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/Stakeable.sol\":6948:6969  StakingSummary memory */\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n        /* \"contracts/Stakeable.sol\":7060:7084  uint256 totalStakeAmount */\n      0x00\n        /* \"contracts/Stakeable.sol\":7163:7192  StakingSummary memory summary */\n      dup1\n        /* \"contracts/Stakeable.sol\":7195:7258  StakingSummary(0, stakeholders[stakes[_staker]].address_stakes) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Stakeable.sol\":7210:7211  0 */\n      0x00\n        /* \"contracts/Stakeable.sol\":7195:7258  StakingSummary(0, stakeholders[stakes[_staker]].address_stakes) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakeable.sol\":7213:7225  stakeholders */\n      0x00\n        /* \"contracts/Stakeable.sol\":7226:7232  stakes */\n      0x01\n        /* \"contracts/Stakeable.sol\":7226:7241  stakes[_staker] */\n      0x00\n        /* \"contracts/Stakeable.sol\":7233:7240  _staker */\n      dup9\n        /* \"contracts/Stakeable.sol\":7226:7241  stakes[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Stakeable.sol\":7213:7242  stakeholders[stakes[_staker]] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_13\n      jumpi\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n    tag_13:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/Stakeable.sol\":7213:7257  stakeholders[stakes[_staker]].address_stakes */\n      0x01\n      add\n        /* \"contracts/Stakeable.sol\":7195:7258  StakingSummary(0, stakeholders[stakes[_staker]].address_stakes) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_17:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_18\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_17)\n    tag_18:\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakeable.sol\":7163:7258  StakingSummary memory summary = StakingSummary(0, stakeholders[stakes[_staker]].address_stakes) */\n      swap1\n      pop\n        /* \"contracts/Stakeable.sol\":7330:7339  uint256 s */\n      0x00\n        /* \"contracts/Stakeable.sol\":7325:7598  for (uint256 s = 0; s < summary.stakes.length; s += 1){... */\n    tag_20:\n        /* \"contracts/Stakeable.sol\":7349:7356  summary */\n      dup2\n        /* \"contracts/Stakeable.sol\":7349:7363  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":7349:7370  summary.stakes.length */\n      mload\n        /* \"contracts/Stakeable.sol\":7345:7346  s */\n      dup2\n        /* \"contracts/Stakeable.sol\":7345:7370  s < summary.stakes.length */\n      lt\n        /* \"contracts/Stakeable.sol\":7325:7598  for (uint256 s = 0; s < summary.stakes.length; s += 1){... */\n      iszero\n      tag_21\n      jumpi\n        /* \"contracts/Stakeable.sol\":7392:7415  uint256 availableReward */\n      0x00\n        /* \"contracts/Stakeable.sol\":7418:7457  calculateStakeReward(summary.stakes[s]) */\n      tag_23\n        /* \"contracts/Stakeable.sol\":7439:7446  summary */\n      dup4\n        /* \"contracts/Stakeable.sol\":7439:7453  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":7454:7455  s */\n      dup4\n        /* \"contracts/Stakeable.sol\":7439:7456  summary.stakes[s] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_24\n      jumpi\n      tag_25\n      tag_15\n      jump\t// in\n    tag_25:\n    tag_24:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":7418:7438  calculateStakeReward */\n      tag_26\n        /* \"contracts/Stakeable.sol\":7418:7457  calculateStakeReward(summary.stakes[s]) */\n      jump\t// in\n    tag_23:\n        /* \"contracts/Stakeable.sol\":7392:7457  uint256 availableReward = calculateStakeReward(summary.stakes[s]) */\n      swap1\n      pop\n        /* \"contracts/Stakeable.sol\":7500:7515  availableReward */\n      dup1\n        /* \"contracts/Stakeable.sol\":7470:7477  summary */\n      dup4\n        /* \"contracts/Stakeable.sol\":7470:7484  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":7485:7486  s */\n      dup4\n        /* \"contracts/Stakeable.sol\":7470:7487  summary.stakes[s] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_27\n      jumpi\n      tag_28\n      tag_15\n      jump\t// in\n    tag_28:\n    tag_27:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":7470:7497  summary.stakes[s].claimable */\n      0x60\n      add\n        /* \"contracts/Stakeable.sol\":7470:7515  summary.stakes[s].claimable = availableReward */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakeable.sol\":7564:7571  summary */\n      dup3\n        /* \"contracts/Stakeable.sol\":7564:7578  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":7579:7580  s */\n      dup3\n        /* \"contracts/Stakeable.sol\":7564:7581  summary.stakes[s] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_29\n      jumpi\n      tag_30\n      tag_15\n      jump\t// in\n    tag_30:\n    tag_29:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":7564:7588  summary.stakes[s].amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":7547:7563  totalStakeAmount */\n      dup5\n        /* \"contracts/Stakeable.sol\":7547:7588  totalStakeAmount+summary.stakes[s].amount */\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"contracts/Stakeable.sol\":7528:7588  totalStakeAmount = totalStakeAmount+summary.stakes[s].amount */\n      swap4\n      pop\n        /* \"contracts/Stakeable.sol\":7379:7598  {... */\n      pop\n        /* \"contracts/Stakeable.sol\":7377:7378  1 */\n      0x01\n        /* \"contracts/Stakeable.sol\":7372:7378  s += 1 */\n      dup2\n      tag_33\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_33:\n      swap1\n      pop\n        /* \"contracts/Stakeable.sol\":7325:7598  for (uint256 s = 0; s < summary.stakes.length; s += 1){... */\n      jump(tag_20)\n    tag_21:\n      pop\n        /* \"contracts/Stakeable.sol\":7674:7690  totalStakeAmount */\n      dup2\n        /* \"contracts/Stakeable.sol\":7651:7658  summary */\n      dup2\n        /* \"contracts/Stakeable.sol\":7651:7671  summary.total_amount */\n      0x00\n      add\n        /* \"contracts/Stakeable.sol\":7651:7690  summary.total_amount = totalStakeAmount */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakeable.sol\":7707:7714  summary */\n      dup1\n        /* \"contracts/Stakeable.sol\":7700:7714  return summary */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Stakeable.sol\":6893:7721  function hasStake(address _staker) public view returns(StakingSummary memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakeable.sol\":4420:5224  function calculateStakeReward(Stake memory _current_stake) internal view returns(uint256){... */\n    tag_26:\n        /* \"contracts/Stakeable.sol\":4501:4508  uint256 */\n      0x00\n        /* \"contracts/Stakeable.sol\":5202:5215  rewardPerHour */\n      sload(0x02)\n        /* \"contracts/Stakeable.sol\":5177:5191  _current_stake */\n      dup3\n        /* \"contracts/Stakeable.sol\":5177:5198  _current_stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":5166:5173  1 hours */\n      0x0e10\n        /* \"contracts/Stakeable.sol\":5142:5156  _current_stake */\n      dup5\n        /* \"contracts/Stakeable.sol\":5142:5162  _current_stake.since */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":5124:5139  block.timestamp */\n      timestamp\n        /* \"contracts/Stakeable.sol\":5124:5162  block.timestamp - _current_stake.since */\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"contracts/Stakeable.sol\":5123:5173  (block.timestamp - _current_stake.since) / 1 hours */\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"contracts/Stakeable.sol\":5122:5198  ((block.timestamp - _current_stake.since) / 1 hours) * _current_stake.amount */\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"contracts/Stakeable.sol\":5121:5215  (((block.timestamp - _current_stake.since) / 1 hours) * _current_stake.amount) / rewardPerHour */\n      tag_41\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_41:\n        /* \"contracts/Stakeable.sol\":5114:5215  return (((block.timestamp - _current_stake.since) / 1 hours) * _current_stake.amount) / rewardPerHour */\n      swap1\n      pop\n        /* \"contracts/Stakeable.sol\":4420:5224  function calculateStakeReward(Stake memory _current_stake) internal view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_11:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_43:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_45\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_6:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":228:347   */\n    tag_48:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_51\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_43\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:750   */\n    tag_52:\n        /* \"#utility.yul\":598:608   */\n      0x00\n        /* \"#utility.yul\":619:707   */\n      tag_54\n        /* \"#utility.yul\":703:706   */\n      dup4\n        /* \"#utility.yul\":695:701   */\n      dup4\n        /* \"#utility.yul\":619:707   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":739:743   */\n      0x80\n        /* \"#utility.yul\":734:737   */\n      dup4\n        /* \"#utility.yul\":730:744   */\n      add\n        /* \"#utility.yul\":716:744   */\n      swap1\n      pop\n        /* \"#utility.yul\":487:750   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":756:864   */\n    tag_56:\n        /* \"#utility.yul\":833:857   */\n      tag_58\n        /* \"#utility.yul\":851:856   */\n      dup2\n        /* \"#utility.yul\":833:857   */\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":828:831   */\n      dup3\n        /* \"#utility.yul\":821:858   */\n      mstore\n        /* \"#utility.yul\":756:864   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":930:1810   */\n    tag_60:\n        /* \"#utility.yul\":1081:1084   */\n      0x00\n        /* \"#utility.yul\":1110:1185   */\n      tag_62\n        /* \"#utility.yul\":1179:1184   */\n      dup3\n        /* \"#utility.yul\":1110:1185   */\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1201:1298   */\n      tag_64\n        /* \"#utility.yul\":1291:1297   */\n      dup2\n        /* \"#utility.yul\":1286:1289   */\n      dup6\n        /* \"#utility.yul\":1201:1298   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1194:1298   */\n      swap4\n      pop\n        /* \"#utility.yul\":1322:1399   */\n      tag_66\n        /* \"#utility.yul\":1393:1398   */\n      dup4\n        /* \"#utility.yul\":1322:1399   */\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1422:1429   */\n      dup1\n        /* \"#utility.yul\":1453:1454   */\n      0x00\n        /* \"#utility.yul\":1438:1785   */\n    tag_68:\n        /* \"#utility.yul\":1463:1469   */\n      dup4\n        /* \"#utility.yul\":1460:1461   */\n      dup2\n        /* \"#utility.yul\":1457:1470   */\n      lt\n        /* \"#utility.yul\":1438:1785   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":1539:1545   */\n      dup2\n        /* \"#utility.yul\":1533:1546   */\n      mload\n        /* \"#utility.yul\":1566:1671   */\n      tag_71\n        /* \"#utility.yul\":1667:1670   */\n      dup9\n        /* \"#utility.yul\":1652:1665   */\n      dup3\n        /* \"#utility.yul\":1566:1671   */\n      tag_52\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1559:1671   */\n      swap8\n      pop\n        /* \"#utility.yul\":1694:1775   */\n      tag_72\n        /* \"#utility.yul\":1768:1774   */\n      dup4\n        /* \"#utility.yul\":1694:1775   */\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1684:1775   */\n      swap3\n      pop\n        /* \"#utility.yul\":1498:1785   */\n      pop\n        /* \"#utility.yul\":1485:1486   */\n      0x01\n        /* \"#utility.yul\":1482:1483   */\n      dup2\n        /* \"#utility.yul\":1478:1487   */\n      add\n        /* \"#utility.yul\":1473:1487   */\n      swap1\n      pop\n        /* \"#utility.yul\":1438:1785   */\n      jump(tag_68)\n    tag_70:\n        /* \"#utility.yul\":1442:1456   */\n      pop\n        /* \"#utility.yul\":1801:1804   */\n      dup6\n        /* \"#utility.yul\":1794:1804   */\n      swap4\n      pop\n        /* \"#utility.yul\":1086:1810   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":930:1810   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1872:2717   */\n    tag_55:\n        /* \"#utility.yul\":2001:2005   */\n      0x80\n        /* \"#utility.yul\":1996:1999   */\n      dup3\n        /* \"#utility.yul\":1992:2006   */\n      add\n        /* \"#utility.yul\":2088:2092   */\n      0x00\n        /* \"#utility.yul\":2081:2086   */\n      dup3\n        /* \"#utility.yul\":2077:2093   */\n      add\n        /* \"#utility.yul\":2071:2094   */\n      mload\n        /* \"#utility.yul\":2107:2170   */\n      tag_75\n        /* \"#utility.yul\":2164:2168   */\n      0x00\n        /* \"#utility.yul\":2159:2162   */\n      dup6\n        /* \"#utility.yul\":2155:2169   */\n      add\n        /* \"#utility.yul\":2141:2153   */\n      dup3\n        /* \"#utility.yul\":2107:2170   */\n      tag_56\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2016:2180   */\n      pop\n        /* \"#utility.yul\":2264:2268   */\n      0x20\n        /* \"#utility.yul\":2257:2262   */\n      dup3\n        /* \"#utility.yul\":2253:2269   */\n      add\n        /* \"#utility.yul\":2247:2270   */\n      mload\n        /* \"#utility.yul\":2283:2346   */\n      tag_76\n        /* \"#utility.yul\":2340:2344   */\n      0x20\n        /* \"#utility.yul\":2335:2338   */\n      dup6\n        /* \"#utility.yul\":2331:2345   */\n      add\n        /* \"#utility.yul\":2317:2329   */\n      dup3\n        /* \"#utility.yul\":2283:2346   */\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2190:2356   */\n      pop\n        /* \"#utility.yul\":2439:2443   */\n      0x40\n        /* \"#utility.yul\":2432:2437   */\n      dup3\n        /* \"#utility.yul\":2428:2444   */\n      add\n        /* \"#utility.yul\":2422:2445   */\n      mload\n        /* \"#utility.yul\":2458:2521   */\n      tag_78\n        /* \"#utility.yul\":2515:2519   */\n      0x40\n        /* \"#utility.yul\":2510:2513   */\n      dup6\n        /* \"#utility.yul\":2506:2520   */\n      add\n        /* \"#utility.yul\":2492:2504   */\n      dup3\n        /* \"#utility.yul\":2458:2521   */\n      tag_77\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2366:2531   */\n      pop\n        /* \"#utility.yul\":2618:2622   */\n      0x60\n        /* \"#utility.yul\":2611:2616   */\n      dup3\n        /* \"#utility.yul\":2607:2623   */\n      add\n        /* \"#utility.yul\":2601:2624   */\n      mload\n        /* \"#utility.yul\":2637:2700   */\n      tag_79\n        /* \"#utility.yul\":2694:2698   */\n      0x60\n        /* \"#utility.yul\":2689:2692   */\n      dup6\n        /* \"#utility.yul\":2685:2699   */\n      add\n        /* \"#utility.yul\":2671:2683   */\n      dup3\n        /* \"#utility.yul\":2637:2700   */\n      tag_77\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2541:2710   */\n      pop\n        /* \"#utility.yul\":1970:2717   */\n      pop\n        /* \"#utility.yul\":1872:2717   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2797:3495   */\n    tag_80:\n        /* \"#utility.yul\":2926:2929   */\n      0x00\n        /* \"#utility.yul\":2962:2966   */\n      0x40\n        /* \"#utility.yul\":2957:2960   */\n      dup4\n        /* \"#utility.yul\":2953:2967   */\n      add\n        /* \"#utility.yul\":3057:3061   */\n      0x00\n        /* \"#utility.yul\":3050:3055   */\n      dup4\n        /* \"#utility.yul\":3046:3062   */\n      add\n        /* \"#utility.yul\":3040:3063   */\n      mload\n        /* \"#utility.yul\":3076:3139   */\n      tag_82\n        /* \"#utility.yul\":3133:3137   */\n      0x00\n        /* \"#utility.yul\":3128:3131   */\n      dup7\n        /* \"#utility.yul\":3124:3138   */\n      add\n        /* \"#utility.yul\":3110:3122   */\n      dup3\n        /* \"#utility.yul\":3076:3139   */\n      tag_77\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2977:3149   */\n      pop\n        /* \"#utility.yul\":3233:3237   */\n      0x20\n        /* \"#utility.yul\":3226:3231   */\n      dup4\n        /* \"#utility.yul\":3222:3238   */\n      add\n        /* \"#utility.yul\":3216:3239   */\n      mload\n        /* \"#utility.yul\":3286:3289   */\n      dup5\n        /* \"#utility.yul\":3280:3284   */\n      dup3\n        /* \"#utility.yul\":3276:3290   */\n      sub\n        /* \"#utility.yul\":3269:3273   */\n      0x20\n        /* \"#utility.yul\":3264:3267   */\n      dup7\n        /* \"#utility.yul\":3260:3274   */\n      add\n        /* \"#utility.yul\":3253:3291   */\n      mstore\n        /* \"#utility.yul\":3312:3457   */\n      tag_83\n        /* \"#utility.yul\":3452:3456   */\n      dup3\n        /* \"#utility.yul\":3438:3450   */\n      dup3\n        /* \"#utility.yul\":3312:3457   */\n      tag_60\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":3304:3457   */\n      swap2\n      pop\n        /* \"#utility.yul\":3159:3468   */\n      pop\n        /* \"#utility.yul\":3485:3489   */\n      dup1\n        /* \"#utility.yul\":3478:3489   */\n      swap2\n      pop\n        /* \"#utility.yul\":2931:3495   */\n      pop\n        /* \"#utility.yul\":2797:3495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3501:3609   */\n    tag_77:\n        /* \"#utility.yul\":3578:3602   */\n      tag_85\n        /* \"#utility.yul\":3596:3601   */\n      dup2\n        /* \"#utility.yul\":3578:3602   */\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":3573:3576   */\n      dup3\n        /* \"#utility.yul\":3566:3603   */\n      mstore\n        /* \"#utility.yul\":3501:3609   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3615:4008   */\n    tag_9:\n        /* \"#utility.yul\":3768:3772   */\n      0x00\n        /* \"#utility.yul\":3806:3808   */\n      0x20\n        /* \"#utility.yul\":3795:3804   */\n      dup3\n        /* \"#utility.yul\":3791:3809   */\n      add\n        /* \"#utility.yul\":3783:3809   */\n      swap1\n      pop\n        /* \"#utility.yul\":3855:3864   */\n      dup2\n        /* \"#utility.yul\":3849:3853   */\n      dup2\n        /* \"#utility.yul\":3845:3865   */\n      sub\n        /* \"#utility.yul\":3841:3842   */\n      0x00\n        /* \"#utility.yul\":3830:3839   */\n      dup4\n        /* \"#utility.yul\":3826:3843   */\n      add\n        /* \"#utility.yul\":3819:3866   */\n      mstore\n        /* \"#utility.yul\":3883:4001   */\n      tag_88\n        /* \"#utility.yul\":3996:4000   */\n      dup2\n        /* \"#utility.yul\":3987:3993   */\n      dup5\n        /* \"#utility.yul\":3883:4001   */\n      tag_80\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":3875:4001   */\n      swap1\n      pop\n        /* \"#utility.yul\":3615:4008   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4095:4248   */\n    tag_67:\n        /* \"#utility.yul\":4183:4187   */\n      0x00\n        /* \"#utility.yul\":4206:4209   */\n      dup2\n        /* \"#utility.yul\":4198:4209   */\n      swap1\n      pop\n        /* \"#utility.yul\":4236:4240   */\n      0x20\n        /* \"#utility.yul\":4231:4234   */\n      dup3\n        /* \"#utility.yul\":4227:4241   */\n      add\n        /* \"#utility.yul\":4219:4241   */\n      swap1\n      pop\n        /* \"#utility.yul\":4095:4248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4254:4389   */\n    tag_63:\n        /* \"#utility.yul\":4342:4348   */\n      0x00\n        /* \"#utility.yul\":4376:4381   */\n      dup2\n        /* \"#utility.yul\":4370:4382   */\n      mload\n        /* \"#utility.yul\":4360:4382   */\n      swap1\n      pop\n        /* \"#utility.yul\":4254:4389   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4395:4529   */\n    tag_73:\n        /* \"#utility.yul\":4486:4490   */\n      0x00\n        /* \"#utility.yul\":4518:4522   */\n      0x20\n        /* \"#utility.yul\":4513:4516   */\n      dup3\n        /* \"#utility.yul\":4509:4523   */\n      add\n        /* \"#utility.yul\":4501:4523   */\n      swap1\n      pop\n        /* \"#utility.yul\":4395:4529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4535:4730   */\n    tag_65:\n        /* \"#utility.yul\":4645:4656   */\n      0x00\n        /* \"#utility.yul\":4679:4685   */\n      dup3\n        /* \"#utility.yul\":4674:4677   */\n      dup3\n        /* \"#utility.yul\":4667:4686   */\n      mstore\n        /* \"#utility.yul\":4719:4723   */\n      0x20\n        /* \"#utility.yul\":4714:4717   */\n      dup3\n        /* \"#utility.yul\":4710:4724   */\n      add\n        /* \"#utility.yul\":4695:4724   */\n      swap1\n      pop\n        /* \"#utility.yul\":4535:4730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4736:5041   */\n    tag_32:\n        /* \"#utility.yul\":4776:4779   */\n      0x00\n        /* \"#utility.yul\":4795:4815   */\n      tag_96\n        /* \"#utility.yul\":4813:4814   */\n      dup3\n        /* \"#utility.yul\":4795:4815   */\n      tag_86\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":4790:4815   */\n      swap2\n      pop\n        /* \"#utility.yul\":4829:4849   */\n      tag_97\n        /* \"#utility.yul\":4847:4848   */\n      dup4\n        /* \"#utility.yul\":4829:4849   */\n      tag_86\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":4824:4849   */\n      swap3\n      pop\n        /* \"#utility.yul\":4983:4984   */\n      dup3\n        /* \"#utility.yul\":4915:4981   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4911:4985   */\n      sub\n        /* \"#utility.yul\":4908:4909   */\n      dup3\n        /* \"#utility.yul\":4905:4986   */\n      gt\n        /* \"#utility.yul\":4902:5009   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":4989:5007   */\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":4902:5009   */\n    tag_98:\n        /* \"#utility.yul\":5033:5034   */\n      dup3\n        /* \"#utility.yul\":5030:5031   */\n      dup3\n        /* \"#utility.yul\":5026:5035   */\n      add\n        /* \"#utility.yul\":5019:5035   */\n      swap1\n      pop\n        /* \"#utility.yul\":4736:5041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5047:5232   */\n    tag_38:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5104:5124   */\n      tag_102\n        /* \"#utility.yul\":5122:5123   */\n      dup3\n        /* \"#utility.yul\":5104:5124   */\n      tag_86\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":5099:5124   */\n      swap2\n      pop\n        /* \"#utility.yul\":5138:5158   */\n      tag_103\n        /* \"#utility.yul\":5156:5157   */\n      dup4\n        /* \"#utility.yul\":5138:5158   */\n      tag_86\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":5133:5158   */\n      swap3\n      pop\n        /* \"#utility.yul\":5177:5178   */\n      dup3\n        /* \"#utility.yul\":5167:5202   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":5182:5200   */\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":5167:5202   */\n    tag_104:\n        /* \"#utility.yul\":5224:5225   */\n      dup3\n        /* \"#utility.yul\":5221:5222   */\n      dup3\n        /* \"#utility.yul\":5217:5226   */\n      div\n        /* \"#utility.yul\":5212:5226   */\n      swap1\n      pop\n        /* \"#utility.yul\":5047:5232   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5238:5586   */\n    tag_40:\n        /* \"#utility.yul\":5278:5285   */\n      0x00\n        /* \"#utility.yul\":5301:5321   */\n      tag_108\n        /* \"#utility.yul\":5319:5320   */\n      dup3\n        /* \"#utility.yul\":5301:5321   */\n      tag_86\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":5296:5321   */\n      swap2\n      pop\n        /* \"#utility.yul\":5335:5355   */\n      tag_109\n        /* \"#utility.yul\":5353:5354   */\n      dup4\n        /* \"#utility.yul\":5335:5355   */\n      tag_86\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":5330:5355   */\n      swap3\n      pop\n        /* \"#utility.yul\":5523:5524   */\n      dup2\n        /* \"#utility.yul\":5455:5521   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5451:5525   */\n      div\n        /* \"#utility.yul\":5448:5449   */\n      dup4\n        /* \"#utility.yul\":5445:5526   */\n      gt\n        /* \"#utility.yul\":5440:5441   */\n      dup3\n        /* \"#utility.yul\":5433:5442   */\n      iszero\n        /* \"#utility.yul\":5426:5443   */\n      iszero\n        /* \"#utility.yul\":5422:5527   */\n      and\n        /* \"#utility.yul\":5419:5550   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":5530:5548   */\n      tag_111\n      tag_100\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":5419:5550   */\n    tag_110:\n        /* \"#utility.yul\":5578:5579   */\n      dup3\n        /* \"#utility.yul\":5575:5576   */\n      dup3\n        /* \"#utility.yul\":5571:5580   */\n      mul\n        /* \"#utility.yul\":5560:5580   */\n      swap1\n      pop\n        /* \"#utility.yul\":5238:5586   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5592:5783   */\n    tag_36:\n        /* \"#utility.yul\":5632:5636   */\n      0x00\n        /* \"#utility.yul\":5652:5672   */\n      tag_113\n        /* \"#utility.yul\":5670:5671   */\n      dup3\n        /* \"#utility.yul\":5652:5672   */\n      tag_86\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":5647:5672   */\n      swap2\n      pop\n        /* \"#utility.yul\":5686:5706   */\n      tag_114\n        /* \"#utility.yul\":5704:5705   */\n      dup4\n        /* \"#utility.yul\":5686:5706   */\n      tag_86\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":5681:5706   */\n      swap3\n      pop\n        /* \"#utility.yul\":5725:5726   */\n      dup3\n        /* \"#utility.yul\":5722:5723   */\n      dup3\n        /* \"#utility.yul\":5719:5727   */\n      lt\n        /* \"#utility.yul\":5716:5750   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":5730:5748   */\n      tag_116\n      tag_100\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":5716:5750   */\n    tag_115:\n        /* \"#utility.yul\":5775:5776   */\n      dup3\n        /* \"#utility.yul\":5772:5773   */\n      dup3\n        /* \"#utility.yul\":5768:5777   */\n      sub\n        /* \"#utility.yul\":5760:5777   */\n      swap1\n      pop\n        /* \"#utility.yul\":5592:5783   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5789:5885   */\n    tag_59:\n        /* \"#utility.yul\":5826:5833   */\n      0x00\n        /* \"#utility.yul\":5855:5879   */\n      tag_118\n        /* \"#utility.yul\":5873:5878   */\n      dup3\n        /* \"#utility.yul\":5855:5879   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":5844:5879   */\n      swap1\n      pop\n        /* \"#utility.yul\":5789:5885   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5891:6017   */\n    tag_119:\n        /* \"#utility.yul\":5928:5935   */\n      0x00\n        /* \"#utility.yul\":5968:6010   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5961:5966   */\n      dup3\n        /* \"#utility.yul\":5957:6011   */\n      and\n        /* \"#utility.yul\":5946:6011   */\n      swap1\n      pop\n        /* \"#utility.yul\":5891:6017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6023:6100   */\n    tag_86:\n        /* \"#utility.yul\":6060:6067   */\n      0x00\n        /* \"#utility.yul\":6089:6094   */\n      dup2\n        /* \"#utility.yul\":6078:6094   */\n      swap1\n      pop\n        /* \"#utility.yul\":6023:6100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6106:6286   */\n    tag_100:\n        /* \"#utility.yul\":6154:6231   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6151:6152   */\n      0x00\n        /* \"#utility.yul\":6144:6232   */\n      mstore\n        /* \"#utility.yul\":6251:6255   */\n      0x11\n        /* \"#utility.yul\":6248:6249   */\n      0x04\n        /* \"#utility.yul\":6241:6256   */\n      mstore\n        /* \"#utility.yul\":6275:6279   */\n      0x24\n        /* \"#utility.yul\":6272:6273   */\n      0x00\n        /* \"#utility.yul\":6265:6280   */\n      revert\n        /* \"#utility.yul\":6292:6472   */\n    tag_106:\n        /* \"#utility.yul\":6340:6417   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6337:6338   */\n      0x00\n        /* \"#utility.yul\":6330:6418   */\n      mstore\n        /* \"#utility.yul\":6437:6441   */\n      0x12\n        /* \"#utility.yul\":6434:6435   */\n      0x04\n        /* \"#utility.yul\":6427:6442   */\n      mstore\n        /* \"#utility.yul\":6461:6465   */\n      0x24\n        /* \"#utility.yul\":6458:6459   */\n      0x00\n        /* \"#utility.yul\":6451:6466   */\n      revert\n        /* \"#utility.yul\":6478:6658   */\n    tag_15:\n        /* \"#utility.yul\":6526:6603   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6523:6524   */\n      0x00\n        /* \"#utility.yul\":6516:6604   */\n      mstore\n        /* \"#utility.yul\":6623:6627   */\n      0x32\n        /* \"#utility.yul\":6620:6621   */\n      0x04\n        /* \"#utility.yul\":6613:6628   */\n      mstore\n        /* \"#utility.yul\":6647:6651   */\n      0x24\n        /* \"#utility.yul\":6644:6645   */\n      0x00\n        /* \"#utility.yul\":6637:6652   */\n      revert\n        /* \"#utility.yul\":6787:6904   */\n    tag_50:\n        /* \"#utility.yul\":6896:6897   */\n      0x00\n        /* \"#utility.yul\":6893:6894   */\n      dup1\n        /* \"#utility.yul\":6886:6898   */\n      revert\n        /* \"#utility.yul\":6910:7032   */\n    tag_46:\n        /* \"#utility.yul\":6983:7007   */\n      tag_129\n        /* \"#utility.yul\":7001:7006   */\n      dup2\n        /* \"#utility.yul\":6983:7007   */\n      tag_59\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":6976:6981   */\n      dup2\n        /* \"#utility.yul\":6973:7008   */\n      eq\n        /* \"#utility.yul\":6963:7026   */\n      tag_130\n      jumpi\n        /* \"#utility.yul\":7022:7023   */\n      0x00\n        /* \"#utility.yul\":7019:7020   */\n      dup1\n        /* \"#utility.yul\":7012:7024   */\n      revert\n        /* \"#utility.yul\":6963:7026   */\n    tag_130:\n        /* \"#utility.yul\":6910:7032   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220775aad60bbe144cb2f2653174944c2db89dc96866dc5ee6547fa04ad0f9feb1e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052606460025534801561001557600080fd5b506000600181600181540180825580915050039060005260206000209050506106bc806100436000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e73e14bf14610030575b600080fd5b61004a600480360381019061004591906102de565b610060565b6040516100579190610431565b60405180910390f35b6100686102af565b6000806040518060400160405280600081526020016000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815481106100d0576100cf61063b565b5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b828210156101a757838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610101565b50505050815250905060005b8160200151518110156102585760006101e9836020015183815181106101dc576101db61063b565b5b602002602001015161026d565b905080836020015183815181106102035761020261063b565b5b602002602001015160600181815250508260200151828151811061022a5761022961063b565b5b60200260200101516020015184610241919061048c565b935050600181610251919061048c565b90506101b3565b50818160000181815250508092505050919050565b60006002548260200151610e1084604001514261028a919061056d565b61029491906104e2565b61029e9190610513565b6102a891906104e2565b9050919050565b604051806040016040528060008152602001606081525090565b6000813590506102d88161066f565b92915050565b6000602082840312156102f4576102f361066a565b5b6000610302848285016102c9565b91505092915050565b60006103178383610390565b60808301905092915050565b61032c816105a1565b82525050565b600061033d82610463565b610347818561047b565b935061035283610453565b8060005b8381101561038357815161036a888261030b565b97506103758361046e565b925050600181019050610356565b5085935050505092915050565b6080820160008201516103a66000850182610323565b5060208201516103b96020850182610422565b5060408201516103cc6040850182610422565b5060608201516103df6060850182610422565b50505050565b60006040830160008301516103fd6000860182610422565b50602083015184820360208601526104158282610332565b9150508091505092915050565b61042b816105d3565b82525050565b6000602082019050818103600083015261044b81846103e5565b905092915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b6000610497826105d3565b91506104a2836105d3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104d7576104d66105dd565b5b828201905092915050565b60006104ed826105d3565b91506104f8836105d3565b9250826105085761050761060c565b5b828204905092915050565b600061051e826105d3565b9150610529836105d3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610562576105616105dd565b5b828202905092915050565b6000610578826105d3565b9150610583836105d3565b925082821015610596576105956105dd565b5b828203905092915050565b60006105ac826105b3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b610678816105a1565b811461068357600080fd5b5056fea2646970667358221220775aad60bbe144cb2f2653174944c2db89dc96866dc5ee6547fa04ad0f9feb1e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP POP PUSH2 0x6BC DUP1 PUSH2 0x43 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE73E14BF EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x68 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xD0 JUMPI PUSH2 0xCF PUSH2 0x63B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1A7 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x101 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 PUSH2 0x1E9 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1DC JUMPI PUSH2 0x1DB PUSH2 0x63B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x26D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x203 JUMPI PUSH2 0x202 PUSH2 0x63B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x22A JUMPI PUSH2 0x229 PUSH2 0x63B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP5 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x48C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x1 DUP2 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x48C JUMP JUMPDEST SWAP1 POP PUSH2 0x1B3 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0xE10 DUP5 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x56D JUMP JUMPDEST PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D8 DUP2 PUSH2 0x66F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F4 JUMPI PUSH2 0x2F3 PUSH2 0x66A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x302 DUP5 DUP3 DUP6 ADD PUSH2 0x2C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP4 DUP4 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32C DUP2 PUSH2 0x5A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH2 0x347 DUP2 DUP6 PUSH2 0x47B JUMP JUMPDEST SWAP4 POP PUSH2 0x352 DUP4 PUSH2 0x453 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x383 JUMPI DUP2 MLOAD PUSH2 0x36A DUP9 DUP3 PUSH2 0x30B JUMP JUMPDEST SWAP8 POP PUSH2 0x375 DUP4 PUSH2 0x46E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x356 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3A6 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x323 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3B9 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x422 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3CC PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x422 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3DF PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x422 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x3FD PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x422 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x415 DUP3 DUP3 PUSH2 0x332 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x42B DUP2 PUSH2 0x5D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44B DUP2 DUP5 PUSH2 0x3E5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x497 DUP3 PUSH2 0x5D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A2 DUP4 PUSH2 0x5D3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4D7 JUMPI PUSH2 0x4D6 PUSH2 0x5DD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4ED DUP3 PUSH2 0x5D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F8 DUP4 PUSH2 0x5D3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x508 JUMPI PUSH2 0x507 PUSH2 0x60C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E DUP3 PUSH2 0x5D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x529 DUP4 PUSH2 0x5D3 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x562 JUMPI PUSH2 0x561 PUSH2 0x5DD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x578 DUP3 PUSH2 0x5D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x583 DUP4 PUSH2 0x5D3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x596 JUMPI PUSH2 0x595 PUSH2 0x5DD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AC DUP3 PUSH2 0x5B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x678 DUP2 PUSH2 0x5A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x5AAD60BBE144CB2F2653174944C2DB89DC96866DC5EE6547 STATICCALL DIV 0xAD 0xF SWAP16 0xEB 0x1E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "176:7548:0:-:0;;;2222:3;2189:36;;365:124;;;;;;;;;;463:12;:19;;;;;;;;;;;;;;;;;;;;;;;176:7548;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@calculateStakeReward_182": {
									"entryPoint": 621,
									"id": 182,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasStake_351": {
									"entryPoint": 96,
									"id": 351,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_StakingSummary_$35_memory_ptr_to_t_struct$_StakingSummary_$35_memory_ptr_fromStack": {
									"entryPoint": 997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_struct$_StakingSummary_$35_memory_ptr__to_t_struct$_StakingSummary_$35_memory_ptr__fromStack_reversed": {
									"entryPoint": 1073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1501,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1548,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7035:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "609:141:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "695:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "703:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "619:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "619:88:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "716:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "734:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "739:4:1",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "730:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "730:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "716:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "582:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "590:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "598:10:1",
														"type": ""
													}
												],
												"src": "487:263:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "811:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "828:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "851:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "833:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "833:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "821:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "821:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "821:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "799:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "806:3:1",
														"type": ""
													}
												],
												"src": "756:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1086:724:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1096:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1110:68:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1110:75:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1100:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1194:104:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1286:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1291:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1201:84:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1201:97:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1194:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1307:92:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1393:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1322:70:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1322:77:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "1311:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1408:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "1422:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1412:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1498:287:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1512:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1539:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1533:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1533:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "1516:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1559:112:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "1652:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1667:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "1566:85:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1566:105:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1559:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1684:91:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1768:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "1694:73:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1694:81:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1684:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1460:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1463:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1457:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1471:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1473:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1482:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1485:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1478:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1478:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1473:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1442:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1444:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1453:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1448:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1438:347:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1794:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1801:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1794:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1065:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1072:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1081:3:1",
														"type": ""
													}
												],
												"src": "930:880:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:747:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1980:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1996:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2001:4:1",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1992:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:14:1"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "1984:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2016:164:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2051:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2081:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2088:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2077:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2077:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2071:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2071:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2055:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2141:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2159:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2164:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2155:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2155:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2107:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2107:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2107:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2190:166:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2227:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2257:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2264:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2253:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2253:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2247:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2247:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2231:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2317:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2335:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2340:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2331:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2331:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2283:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2283:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2283:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2366:165:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2402:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2432:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2439:4:1",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2428:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2428:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2422:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2422:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2406:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2492:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2510:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2515:4:1",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2506:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2506:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2458:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2458:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2458:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2541:169:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2581:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2611:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2618:4:1",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2607:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2607:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2601:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2601:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2585:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2671:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2689:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2694:4:1",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2685:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2685:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2637:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2637:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2637:63:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1957:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1964:3:1",
														"type": ""
													}
												],
												"src": "1872:845:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2931:564:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2941:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2957:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2962:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2953:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2953:14:1"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "2945:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2977:172:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3020:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3050:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3057:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3046:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3046:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3040:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3040:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3024:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3110:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3128:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3133:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3124:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3124:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3076:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3076:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3076:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3159:309:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3196:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3226:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3233:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3222:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3216:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3216:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "3200:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3264:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3269:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3260:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3260:14:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "3280:4:1"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "3286:3:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3276:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3276:14:1"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3253:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3253:38:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3253:38:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3304:153:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "3438:12:1"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3452:4:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3312:125:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3312:145:1"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "3304:4:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3478:11:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "3485:4:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3478:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_StakingSummary_$35_memory_ptr_to_t_struct$_StakingSummary_$35_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2910:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2917:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2926:3:1",
														"type": ""
													}
												],
												"src": "2797:698:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3556:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3573:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3596:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3578:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3578:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3566:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3566:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3566:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3544:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3551:3:1",
														"type": ""
													}
												],
												"src": "3501:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3773:235:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3783:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3795:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3806:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3791:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3783:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3830:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3841:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3826:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3826:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3849:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3855:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3845:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3845:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3819:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3819:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3819:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3875:126:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3987:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3996:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_StakingSummary_$35_memory_ptr_to_t_struct$_StakingSummary_$35_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3883:103:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3883:118:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3875:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_StakingSummary_$35_memory_ptr__to_t_struct$_StakingSummary_$35_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3745:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3757:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3768:4:1",
														"type": ""
													}
												],
												"src": "3615:393:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4054:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4064:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4080:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4074:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4074:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4064:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4047:6:1",
														"type": ""
													}
												],
												"src": "4014:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4188:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4198:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4206:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4198:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4219:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4231:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4236:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4227:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4227:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4219:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4175:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4183:4:1",
														"type": ""
													}
												],
												"src": "4095:153:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4349:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4360:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4376:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4370:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4370:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4332:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4342:6:1",
														"type": ""
													}
												],
												"src": "4254:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4491:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4501:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4513:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4518:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4509:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4509:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "4501:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4478:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "4486:4:1",
														"type": ""
													}
												],
												"src": "4395:134:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4657:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4674:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4679:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4667:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4667:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4695:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4714:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4719:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4710:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4710:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4695:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4629:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4634:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4645:11:1",
														"type": ""
													}
												],
												"src": "4535:195:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4780:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4790:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4813:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4795:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4790:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4824:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4847:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4829:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4824:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4987:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4989:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4989:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4989:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4908:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4915:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4983:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4911:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4911:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4905:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4905:81:1"
															},
															"nodeType": "YulIf",
															"src": "4902:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5019:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5030:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5033:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5026:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5026:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5019:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4767:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4770:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4776:3:1",
														"type": ""
													}
												],
												"src": "4736:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5089:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5099:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5122:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5104:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5104:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5099:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5133:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5156:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5138:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5138:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5133:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5180:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5182:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5182:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5182:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5177:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5170:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5170:9:1"
															},
															"nodeType": "YulIf",
															"src": "5167:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5212:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5221:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5224:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5217:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5217:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5212:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5078:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5081:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5087:1:1",
														"type": ""
													}
												],
												"src": "5047:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5286:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5296:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5319:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5301:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5301:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5296:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5330:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5353:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5335:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5335:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5330:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5528:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5530:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5530:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5530:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5440:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5433:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5433:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5426:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5426:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5448:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5455:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5523:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5451:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5451:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5445:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5445:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5422:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5422:105:1"
															},
															"nodeType": "YulIf",
															"src": "5419:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5560:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5575:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5578:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5571:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5571:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5560:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5269:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5272:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5278:7:1",
														"type": ""
													}
												],
												"src": "5238:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5637:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5647:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5670:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5652:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5652:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5647:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5681:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5704:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5686:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5686:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5681:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5728:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5730:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5730:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5730:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5722:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5725:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5719:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5719:8:1"
															},
															"nodeType": "YulIf",
															"src": "5716:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5760:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5772:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5775:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5768:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5768:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5760:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5623:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5626:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5632:4:1",
														"type": ""
													}
												],
												"src": "5592:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5834:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5844:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5873:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5855:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5855:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5844:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5816:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5826:7:1",
														"type": ""
													}
												],
												"src": "5789:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5936:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5946:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5961:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5968:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5957:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5957:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5946:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5918:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5928:7:1",
														"type": ""
													}
												],
												"src": "5891:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6068:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6078:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6089:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6078:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6050:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6060:7:1",
														"type": ""
													}
												],
												"src": "6023:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6134:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6151:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6154:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6144:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6144:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6248:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6251:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6241:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6241:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6272:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6275:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6265:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6265:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6106:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6320:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6337:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6340:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6330:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6330:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6330:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6434:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6437:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6427:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6427:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6427:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6458:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6461:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6451:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6451:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6292:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6506:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6523:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6526:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6516:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6516:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6620:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6623:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6613:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6613:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6613:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6644:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6647:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6637:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6637:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6637:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6478:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6770:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6773:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6763:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6763:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6763:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "6664:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6876:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6893:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6896:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6886:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6886:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6886:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "6787:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6953:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7010:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7019:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7022:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7012:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7012:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7012:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6976:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7001:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6983:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6983:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6973:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6973:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6966:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6966:43:1"
															},
															"nodeType": "YulIf",
															"src": "6963:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6946:5:1",
														"type": ""
													}
												],
												"src": "6910:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x80)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct Stakeable.Stake[] -> struct Stakeable.Stake[]\n    function abi_encode_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct Stakeable.Stake -> struct Stakeable.Stake\n    function abi_encode_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // since\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // claimable\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    // struct Stakeable.StakingSummary -> struct Stakeable.StakingSummary\n    function abi_encode_t_struct$_StakingSummary_$35_memory_ptr_to_t_struct$_StakingSummary_$35_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // total_amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // stakes\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_struct$_StakingSummary_$35_memory_ptr__to_t_struct$_StakingSummary_$35_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_StakingSummary_$35_memory_ptr_to_t_struct$_StakingSummary_$35_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e73e14bf14610030575b600080fd5b61004a600480360381019061004591906102de565b610060565b6040516100579190610431565b60405180910390f35b6100686102af565b6000806040518060400160405280600081526020016000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815481106100d0576100cf61063b565b5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b828210156101a757838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610101565b50505050815250905060005b8160200151518110156102585760006101e9836020015183815181106101dc576101db61063b565b5b602002602001015161026d565b905080836020015183815181106102035761020261063b565b5b602002602001015160600181815250508260200151828151811061022a5761022961063b565b5b60200260200101516020015184610241919061048c565b935050600181610251919061048c565b90506101b3565b50818160000181815250508092505050919050565b60006002548260200151610e1084604001514261028a919061056d565b61029491906104e2565b61029e9190610513565b6102a891906104e2565b9050919050565b604051806040016040528060008152602001606081525090565b6000813590506102d88161066f565b92915050565b6000602082840312156102f4576102f361066a565b5b6000610302848285016102c9565b91505092915050565b60006103178383610390565b60808301905092915050565b61032c816105a1565b82525050565b600061033d82610463565b610347818561047b565b935061035283610453565b8060005b8381101561038357815161036a888261030b565b97506103758361046e565b925050600181019050610356565b5085935050505092915050565b6080820160008201516103a66000850182610323565b5060208201516103b96020850182610422565b5060408201516103cc6040850182610422565b5060608201516103df6060850182610422565b50505050565b60006040830160008301516103fd6000860182610422565b50602083015184820360208601526104158282610332565b9150508091505092915050565b61042b816105d3565b82525050565b6000602082019050818103600083015261044b81846103e5565b905092915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b6000610497826105d3565b91506104a2836105d3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104d7576104d66105dd565b5b828201905092915050565b60006104ed826105d3565b91506104f8836105d3565b9250826105085761050761060c565b5b828204905092915050565b600061051e826105d3565b9150610529836105d3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610562576105616105dd565b5b828202905092915050565b6000610578826105d3565b9150610583836105d3565b925082821015610596576105956105dd565b5b828203905092915050565b60006105ac826105b3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b610678816105a1565b811461068357600080fd5b5056fea2646970667358221220775aad60bbe144cb2f2653174944c2db89dc96866dc5ee6547fa04ad0f9feb1e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE73E14BF EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2DE JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x68 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xD0 JUMPI PUSH2 0xCF PUSH2 0x63B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1A7 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x101 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 PUSH2 0x1E9 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1DC JUMPI PUSH2 0x1DB PUSH2 0x63B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x26D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x203 JUMPI PUSH2 0x202 PUSH2 0x63B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x22A JUMPI PUSH2 0x229 PUSH2 0x63B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP5 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x48C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x1 DUP2 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x48C JUMP JUMPDEST SWAP1 POP PUSH2 0x1B3 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0xE10 DUP5 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x56D JUMP JUMPDEST PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x4E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D8 DUP2 PUSH2 0x66F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F4 JUMPI PUSH2 0x2F3 PUSH2 0x66A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x302 DUP5 DUP3 DUP6 ADD PUSH2 0x2C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP4 DUP4 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32C DUP2 PUSH2 0x5A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH2 0x347 DUP2 DUP6 PUSH2 0x47B JUMP JUMPDEST SWAP4 POP PUSH2 0x352 DUP4 PUSH2 0x453 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x383 JUMPI DUP2 MLOAD PUSH2 0x36A DUP9 DUP3 PUSH2 0x30B JUMP JUMPDEST SWAP8 POP PUSH2 0x375 DUP4 PUSH2 0x46E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x356 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3A6 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x323 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3B9 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x422 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3CC PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x422 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3DF PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x422 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x3FD PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x422 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x415 DUP3 DUP3 PUSH2 0x332 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x42B DUP2 PUSH2 0x5D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x44B DUP2 DUP5 PUSH2 0x3E5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x497 DUP3 PUSH2 0x5D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A2 DUP4 PUSH2 0x5D3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4D7 JUMPI PUSH2 0x4D6 PUSH2 0x5DD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4ED DUP3 PUSH2 0x5D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F8 DUP4 PUSH2 0x5D3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x508 JUMPI PUSH2 0x507 PUSH2 0x60C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E DUP3 PUSH2 0x5D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x529 DUP4 PUSH2 0x5D3 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x562 JUMPI PUSH2 0x561 PUSH2 0x5DD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x578 DUP3 PUSH2 0x5D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x583 DUP4 PUSH2 0x5D3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x596 JUMPI PUSH2 0x595 PUSH2 0x5DD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AC DUP3 PUSH2 0x5B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x678 DUP2 PUSH2 0x5A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x5AAD60BBE144CB2F2653174944C2DB89DC96866DC5EE6547 STATICCALL DIV 0xAD 0xF SWAP16 0xEB 0x1E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "176:7548:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6893:828;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;6948:21;;:::i;:::-;7060:24;7163:29;7195:63;;;;;;;;7210:1;7195:63;;;;7213:12;7226:6;:15;7233:7;7226:15;;;;;;;;;;;;;;;;7213:29;;;;;;;;:::i;:::-;;;;;;;;;;;;:44;;7195:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7163:95;;7330:9;7325:273;7349:7;:14;;;:21;7345:1;:25;7325:273;;;7392:23;7418:39;7439:7;:14;;;7454:1;7439:17;;;;;;;;:::i;:::-;;;;;;;;7418:20;:39::i;:::-;7392:65;;7500:15;7470:7;:14;;;7485:1;7470:17;;;;;;;;:::i;:::-;;;;;;;;:27;;:45;;;;;7564:7;:14;;;7579:1;7564:17;;;;;;;;:::i;:::-;;;;;;;;:24;;;7547:16;:41;;;;:::i;:::-;7528:60;;7379:219;7377:1;7372:6;;;;;:::i;:::-;;;7325:273;;;;7674:16;7651:7;:20;;:39;;;;;7707:7;7700:14;;;;6893:828;;;:::o;4420:804::-;4501:7;5202:13;;5177:14;:21;;;5166:7;5142:14;:20;;;5124:15;:38;;;;:::i;:::-;5123:50;;;;:::i;:::-;5122:76;;;;:::i;:::-;5121:94;;;;:::i;:::-;5114:101;;4420:804;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:263::-;598:10;619:88;703:3;695:6;619:88;:::i;:::-;739:4;734:3;730:14;716:28;;487:263;;;;:::o;756:108::-;833:24;851:5;833:24;:::i;:::-;828:3;821:37;756:108;;:::o;930:880::-;1081:3;1110:75;1179:5;1110:75;:::i;:::-;1201:97;1291:6;1286:3;1201:97;:::i;:::-;1194:104;;1322:77;1393:5;1322:77;:::i;:::-;1422:7;1453:1;1438:347;1463:6;1460:1;1457:13;1438:347;;;1539:6;1533:13;1566:105;1667:3;1652:13;1566:105;:::i;:::-;1559:112;;1694:81;1768:6;1694:81;:::i;:::-;1684:91;;1498:287;1485:1;1482;1478:9;1473:14;;1438:347;;;1442:14;1801:3;1794:10;;1086:724;;;930:880;;;;:::o;1872:845::-;2001:4;1996:3;1992:14;2088:4;2081:5;2077:16;2071:23;2107:63;2164:4;2159:3;2155:14;2141:12;2107:63;:::i;:::-;2016:164;2264:4;2257:5;2253:16;2247:23;2283:63;2340:4;2335:3;2331:14;2317:12;2283:63;:::i;:::-;2190:166;2439:4;2432:5;2428:16;2422:23;2458:63;2515:4;2510:3;2506:14;2492:12;2458:63;:::i;:::-;2366:165;2618:4;2611:5;2607:16;2601:23;2637:63;2694:4;2689:3;2685:14;2671:12;2637:63;:::i;:::-;2541:169;1970:747;1872:845;;:::o;2797:698::-;2926:3;2962:4;2957:3;2953:14;3057:4;3050:5;3046:16;3040:23;3076:63;3133:4;3128:3;3124:14;3110:12;3076:63;:::i;:::-;2977:172;3233:4;3226:5;3222:16;3216:23;3286:3;3280:4;3276:14;3269:4;3264:3;3260:14;3253:38;3312:145;3452:4;3438:12;3312:145;:::i;:::-;3304:153;;3159:309;3485:4;3478:11;;2931:564;2797:698;;;;:::o;3501:108::-;3578:24;3596:5;3578:24;:::i;:::-;3573:3;3566:37;3501:108;;:::o;3615:393::-;3768:4;3806:2;3795:9;3791:18;3783:26;;3855:9;3849:4;3845:20;3841:1;3830:9;3826:17;3819:47;3883:118;3996:4;3987:6;3883:118;:::i;:::-;3875:126;;3615:393;;;;:::o;4095:153::-;4183:4;4206:3;4198:11;;4236:4;4231:3;4227:14;4219:22;;4095:153;;;:::o;4254:135::-;4342:6;4376:5;4370:12;4360:22;;4254:135;;;:::o;4395:134::-;4486:4;4518;4513:3;4509:14;4501:22;;4395:134;;;:::o;4535:195::-;4645:11;4679:6;4674:3;4667:19;4719:4;4714:3;4710:14;4695:29;;4535:195;;;;:::o;4736:305::-;4776:3;4795:20;4813:1;4795:20;:::i;:::-;4790:25;;4829:20;4847:1;4829:20;:::i;:::-;4824:25;;4983:1;4915:66;4911:74;4908:1;4905:81;4902:107;;;4989:18;;:::i;:::-;4902:107;5033:1;5030;5026:9;5019:16;;4736:305;;;;:::o;5047:185::-;5087:1;5104:20;5122:1;5104:20;:::i;:::-;5099:25;;5138:20;5156:1;5138:20;:::i;:::-;5133:25;;5177:1;5167:35;;5182:18;;:::i;:::-;5167:35;5224:1;5221;5217:9;5212:14;;5047:185;;;;:::o;5238:348::-;5278:7;5301:20;5319:1;5301:20;:::i;:::-;5296:25;;5335:20;5353:1;5335:20;:::i;:::-;5330:25;;5523:1;5455:66;5451:74;5448:1;5445:81;5440:1;5433:9;5426:17;5422:105;5419:131;;;5530:18;;:::i;:::-;5419:131;5578:1;5575;5571:9;5560:20;;5238:348;;;;:::o;5592:191::-;5632:4;5652:20;5670:1;5652:20;:::i;:::-;5647:25;;5686:20;5704:1;5686:20;:::i;:::-;5681:25;;5725:1;5722;5719:8;5716:34;;;5730:18;;:::i;:::-;5716:34;5775:1;5772;5768:9;5760:17;;5592:191;;;;:::o;5789:96::-;5826:7;5855:24;5873:5;5855:24;:::i;:::-;5844:35;;5789:96;;;:::o;5891:126::-;5928:7;5968:42;5961:5;5957:54;5946:65;;5891:126;;;:::o;6023:77::-;6060:7;6089:5;6078:16;;6023:77;;;:::o;6106:180::-;6154:77;6151:1;6144:88;6251:4;6248:1;6241:15;6275:4;6272:1;6265:15;6292:180;6340:77;6337:1;6330:88;6437:4;6434:1;6427:15;6461:4;6458:1;6451:15;6478:180;6526:77;6523:1;6516:88;6623:4;6620:1;6613:15;6647:4;6644:1;6637:15;6787:117;6896:1;6893;6886:12;6910:122;6983:24;7001:5;6983:24;:::i;:::-;6976:5;6973:35;6963:63;;7022:1;7019;7012:12;6963:63;6910:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "344800",
								"executionCost": "46781",
								"totalCost": "391581"
							},
							"external": {
								"hasStake(address)": "infinite"
							},
							"internal": {
								"_addStakeholder(address)": "infinite",
								"_stake(uint256)": "infinite",
								"_withdrawStake(uint256,uint256)": "infinite",
								"calculateStakeReward(struct Stakeable.Stake memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 176,
									"end": 7724,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 176,
									"end": 7724,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 176,
									"end": 7724,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2222,
									"end": 2225,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 2189,
									"end": 2225,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2189,
									"end": 2225,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 365,
									"end": 489,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 365,
									"end": 489,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 365,
									"end": 489,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 365,
									"end": 489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 365,
									"end": 489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 365,
									"end": 489,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 489,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 365,
									"end": 489,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 365,
									"end": 489,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 365,
									"end": 489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 365,
									"end": 489,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 463,
									"end": 475,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 482,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 463,
									"end": 482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 463,
									"end": 482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 463,
									"end": 482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 482,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 176,
									"end": 7724,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 7724,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 176,
									"end": 7724,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 7724,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 7724,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 176,
									"end": 7724,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 7724,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220775aad60bbe144cb2f2653174944c2db89dc96866dc5ee6547fa04ad0f9feb1e64736f6c63430008070033",
									".code": [
										{
											"begin": 176,
											"end": 7724,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "PUSH",
											"source": 0,
											"value": "E73E14BF"
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7724,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6948,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6948,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6948,
											"end": 6969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6948,
											"end": 6969,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6948,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7060,
											"end": 7084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7163,
											"end": 7192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7233,
											"end": 7240,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7257,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7213,
											"end": 7257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7163,
											"end": 7258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7163,
											"end": 7258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7330,
											"end": 7339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7325,
											"end": 7598,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7325,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7363,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7349,
											"end": 7363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7363,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7349,
											"end": 7370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7345,
											"end": 7346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7345,
											"end": 7370,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7325,
											"end": 7598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7325,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7325,
											"end": 7598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7418,
											"end": 7457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7439,
											"end": 7446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7439,
											"end": 7453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7454,
											"end": 7455,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7418,
											"end": 7457,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7418,
											"end": 7457,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7418,
											"end": 7457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7392,
											"end": 7457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7500,
											"end": 7515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7470,
											"end": 7484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7485,
											"end": 7486,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7487,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7497,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7470,
											"end": 7497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7470,
											"end": 7515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7564,
											"end": 7578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7579,
											"end": 7580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7564,
											"end": 7588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7563,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7547,
											"end": 7588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7547,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7547,
											"end": 7588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7547,
											"end": 7588,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7547,
											"end": 7588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7588,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7528,
											"end": 7588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7379,
											"end": 7598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7377,
											"end": 7378,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7372,
											"end": 7378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7372,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7372,
											"end": 7378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7372,
											"end": 7378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7372,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7372,
											"end": 7378,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7372,
											"end": 7378,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7372,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7372,
											"end": 7378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7372,
											"end": 7378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7325,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7325,
											"end": 7598,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7325,
											"end": 7598,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7325,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7325,
											"end": 7598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7674,
											"end": 7690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7651,
											"end": 7671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7651,
											"end": 7690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7707,
											"end": 7714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 7721,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4420,
											"end": 5224,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4420,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5215,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5202,
											"end": 5215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5198,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5166,
											"end": 5173,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5142,
											"end": 5162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5124,
											"end": 5139,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 5124,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5124,
											"end": 5162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5124,
											"end": 5162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5124,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5124,
											"end": 5162,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5124,
											"end": 5162,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5124,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5123,
											"end": 5173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5123,
											"end": 5173,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5173,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5123,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5122,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5122,
											"end": 5198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5122,
											"end": 5198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5122,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5122,
											"end": 5198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5122,
											"end": 5198,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5122,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5121,
											"end": 5215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5121,
											"end": 5215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5121,
											"end": 5215,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5121,
											"end": 5215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5114,
											"end": 5215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5114,
											"end": 5215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4420,
											"end": 5224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4420,
											"end": 5224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4420,
											"end": 5224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4420,
											"end": 5224,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 750,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 487,
											"end": 750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 598,
											"end": 608,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 703,
											"end": 706,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 695,
											"end": 701,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 619,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 619,
											"end": 707,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 619,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 619,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 739,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 734,
											"end": 737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 730,
											"end": 744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 716,
											"end": 744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 716,
											"end": 744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 750,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 487,
											"end": 750,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 750,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 756,
											"end": 864,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 756,
											"end": 864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 833,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 833,
											"end": 857,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 857,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 833,
											"end": 857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 828,
											"end": 831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 821,
											"end": 858,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 756,
											"end": 864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 756,
											"end": 864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 756,
											"end": 864,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 930,
											"end": 1810,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 930,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1110,
											"end": 1185,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1110,
											"end": 1185,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1110,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1291,
											"end": 1297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1289,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1201,
											"end": 1298,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1298,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1201,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1298,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1393,
											"end": 1398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1322,
											"end": 1399,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1322,
											"end": 1399,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1322,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1785,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1438,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1461,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1785,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1438,
											"end": 1785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1533,
											"end": 1546,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1667,
											"end": 1670,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1566,
											"end": 1671,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1566,
											"end": 1671,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1566,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1671,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1694,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1768,
											"end": 1774,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1694,
											"end": 1775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1694,
											"end": 1775,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1694,
											"end": 1775,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1694,
											"end": 1775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1775,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1486,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 1483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1438,
											"end": 1785,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1785,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1438,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1804,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1804,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1810,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 930,
											"end": 1810,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1872,
											"end": 2717,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1872,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2005,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1996,
											"end": 1999,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2086,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2164,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2162,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2107,
											"end": 2170,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2107,
											"end": 2170,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2107,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2268,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2257,
											"end": 2262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2253,
											"end": 2269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2340,
											"end": 2344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2335,
											"end": 2338,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2283,
											"end": 2346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2283,
											"end": 2346,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2283,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2443,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2428,
											"end": 2444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2445,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2515,
											"end": 2519,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2622,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2611,
											"end": 2616,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2624,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2637,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2694,
											"end": 2698,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2689,
											"end": 2692,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2685,
											"end": 2699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2637,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2637,
											"end": 2700,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2637,
											"end": 2700,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2637,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 2717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 2717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 2717,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2797,
											"end": 3495,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2797,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2960,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3061,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3133,
											"end": 3137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3131,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3122,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3076,
											"end": 3139,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3076,
											"end": 3139,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3076,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 3149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3237,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3226,
											"end": 3231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3239,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3289,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3290,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3267,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3253,
											"end": 3291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3452,
											"end": 3456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3312,
											"end": 3457,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3312,
											"end": 3457,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3312,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3159,
											"end": 3468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3489,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2931,
											"end": 3495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 3495,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 3495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 3495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 3495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 3495,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3501,
											"end": 3609,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3501,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3596,
											"end": 3601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3578,
											"end": 3602,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3578,
											"end": 3602,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3578,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3566,
											"end": 3603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3609,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3615,
											"end": 4008,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3615,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3808,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3795,
											"end": 3804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3865,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3830,
											"end": 3839,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3826,
											"end": 3843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3996,
											"end": 4000,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3883,
											"end": 4001,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3883,
											"end": 4001,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3883,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 4001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 4001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 4008,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 4008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 4008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 4008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 4008,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4095,
											"end": 4248,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4095,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4206,
											"end": 4209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4231,
											"end": 4234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4248,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4254,
											"end": 4389,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4254,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4360,
											"end": 4382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4360,
											"end": 4382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4389,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4389,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4395,
											"end": 4529,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4395,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4518,
											"end": 4522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4513,
											"end": 4516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4509,
											"end": 4523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4529,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4535,
											"end": 4730,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4535,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4645,
											"end": 4656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4679,
											"end": 4685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4674,
											"end": 4677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4667,
											"end": 4686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4714,
											"end": 4717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4710,
											"end": 4724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4695,
											"end": 4724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4695,
											"end": 4724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4730,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4730,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4730,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4736,
											"end": 5041,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4736,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 4779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4813,
											"end": 4814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4795,
											"end": 4815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4815,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4829,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4847,
											"end": 4848,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4829,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4829,
											"end": 4849,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4829,
											"end": 4849,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4829,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4849,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4915,
											"end": 4981,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4911,
											"end": 4985,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 4986,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 5009,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4902,
											"end": 5009,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 5009,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4902,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5033,
											"end": 5034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5041,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5041,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4736,
											"end": 5041,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5047,
											"end": 5232,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5047,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5104,
											"end": 5124,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5104,
											"end": 5124,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5104,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5124,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5156,
											"end": 5157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5138,
											"end": 5158,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5138,
											"end": 5158,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5138,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5133,
											"end": 5158,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5133,
											"end": 5158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5167,
											"end": 5202,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5182,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5182,
											"end": 5200,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5182,
											"end": 5200,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5182,
											"end": 5200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5202,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5167,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 5225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5221,
											"end": 5222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5226,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5047,
											"end": 5232,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5047,
											"end": 5232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5047,
											"end": 5232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5047,
											"end": 5232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5047,
											"end": 5232,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5238,
											"end": 5586,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5238,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5301,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5319,
											"end": 5320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5301,
											"end": 5321,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5301,
											"end": 5321,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5301,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5296,
											"end": 5321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5296,
											"end": 5321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5353,
											"end": 5354,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5335,
											"end": 5355,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5335,
											"end": 5355,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5335,
											"end": 5355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5355,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5455,
											"end": 5521,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5451,
											"end": 5525,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5526,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5440,
											"end": 5441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5433,
											"end": 5442,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5426,
											"end": 5443,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5422,
											"end": 5527,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5550,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5419,
											"end": 5550,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5530,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5530,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5530,
											"end": 5548,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5530,
											"end": 5548,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5530,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5550,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5419,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5580,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5560,
											"end": 5580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5238,
											"end": 5586,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5238,
											"end": 5586,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5238,
											"end": 5586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5238,
											"end": 5586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5238,
											"end": 5586,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5592,
											"end": 5783,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5592,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5632,
											"end": 5636,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5670,
											"end": 5671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5652,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5652,
											"end": 5672,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5652,
											"end": 5672,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5652,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5704,
											"end": 5705,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5686,
											"end": 5706,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5706,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5686,
											"end": 5706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5681,
											"end": 5706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5681,
											"end": 5706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5725,
											"end": 5726,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5722,
											"end": 5723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5719,
											"end": 5727,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5750,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5716,
											"end": 5750,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5730,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5730,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5730,
											"end": 5748,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5730,
											"end": 5748,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5730,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5750,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5716,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5772,
											"end": 5773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5777,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5760,
											"end": 5777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5760,
											"end": 5777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5592,
											"end": 5783,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5592,
											"end": 5783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5592,
											"end": 5783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5592,
											"end": 5783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5592,
											"end": 5783,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5789,
											"end": 5885,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5789,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5826,
											"end": 5833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5855,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5873,
											"end": 5878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5855,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5855,
											"end": 5879,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5855,
											"end": 5879,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5855,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5844,
											"end": 5879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5844,
											"end": 5879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5885,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5885,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5891,
											"end": 6017,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5891,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 6010,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5961,
											"end": 5966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5957,
											"end": 6011,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 6011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 6011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 6017,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 6017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 6017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 6017,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6023,
											"end": 6100,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6023,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6100,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6100,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6106,
											"end": 6286,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6106,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6154,
											"end": 6231,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6151,
											"end": 6152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6144,
											"end": 6232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6255,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6248,
											"end": 6249,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6241,
											"end": 6256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6275,
											"end": 6279,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6272,
											"end": 6273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6280,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6472,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 6292,
											"end": 6472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6337,
											"end": 6338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6330,
											"end": 6418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6437,
											"end": 6441,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6434,
											"end": 6435,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6427,
											"end": 6442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6461,
											"end": 6465,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6458,
											"end": 6459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6451,
											"end": 6466,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6658,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 6478,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6526,
											"end": 6603,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6523,
											"end": 6524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6516,
											"end": 6604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6627,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6620,
											"end": 6621,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6613,
											"end": 6628,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6651,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6644,
											"end": 6645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6637,
											"end": 6652,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6787,
											"end": 6904,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6787,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6893,
											"end": 6894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6898,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 7032,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 6910,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6983,
											"end": 7007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7001,
											"end": 7006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6983,
											"end": 7007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6983,
											"end": 7007,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6983,
											"end": 7007,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6983,
											"end": 7007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 7008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6963,
											"end": 7026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7022,
											"end": 7023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7019,
											"end": 7020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7012,
											"end": 7024,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 7026,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6963,
											"end": 7026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 7032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 7032,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"hasStake(address)": "e73e14bf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"hasStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"}],\"internalType\":\"struct Stakeable.Stake[]\",\"name\":\"stakes\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Stakeable.StakingSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Staked(address,uint256,uint256,uint256)\":{\"notice\":\"Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor since this contract is not ment to be used without inheritance push once to stakeholders for it to work proplerly\"},\"hasStake(address)\":{\"notice\":\"hasStake is used to check if a account has stakes and the total amount along with all the seperate stakes\"}},\"notice\":\"Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Stakeable.sol\":\"Stakeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Stakeable.sol\":{\"keccak256\":\"0x517707a10dac8dc1fe0670a17a31ac037455b13e41db57ebac282fefb2c8687e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://248365511509deab02de1c3ae4239da30813f6c004df652ea7d2f9e182a410c5\",\"dweb:/ipfs/QmThxzL42kdJ6cAgr9VNMoMRkZvrs5KuTaxva9U9ac9smA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 40,
								"contract": "contracts/Stakeable.sol:Stakeable",
								"label": "stakeholders",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(Stakeholder)28_storage)dyn_storage"
							},
							{
								"astId": 45,
								"contract": "contracts/Stakeable.sol:Stakeable",
								"label": "stakes",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 60,
								"contract": "contracts/Stakeable.sol:Stakeable",
								"label": "rewardPerHour",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Stake)21_storage)dyn_storage": {
								"base": "t_struct(Stake)21_storage",
								"encoding": "dynamic_array",
								"label": "struct Stakeable.Stake[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Stakeholder)28_storage)dyn_storage": {
								"base": "t_struct(Stakeholder)28_storage",
								"encoding": "dynamic_array",
								"label": "struct Stakeable.Stakeholder[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)21_storage": {
								"encoding": "inplace",
								"label": "struct Stakeable.Stake",
								"members": [
									{
										"astId": 14,
										"contract": "contracts/Stakeable.sol:Stakeable",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 16,
										"contract": "contracts/Stakeable.sol:Stakeable",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 18,
										"contract": "contracts/Stakeable.sol:Stakeable",
										"label": "since",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 20,
										"contract": "contracts/Stakeable.sol:Stakeable",
										"label": "claimable",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Stakeholder)28_storage": {
								"encoding": "inplace",
								"label": "struct Stakeable.Stakeholder",
								"members": [
									{
										"astId": 23,
										"contract": "contracts/Stakeable.sol:Stakeable",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 27,
										"contract": "contracts/Stakeable.sol:Stakeable",
										"label": "address_stakes",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(Stake)21_storage)dyn_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Staked(address,uint256,uint256,uint256)": {
								"notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
							}
						},
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Constructor since this contract is not ment to be used without inheritance push once to stakeholders for it to work proplerly"
							},
							"hasStake(address)": {
								"notice": "hasStake is used to check if a account has stakes and the total amount along with all the seperate stakes"
							}
						},
						"notice": "Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Stakeable.sol": {
				"ast": {
					"absolutePath": "contracts/Stakeable.sol",
					"exportedSymbols": {
						"Stakeable": [
							352
						]
					},
					"id": 353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "57:118:0",
								"text": " @notice Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities"
							},
							"fullyImplemented": true,
							"id": 352,
							"linearizedBaseContracts": [
								352
							],
							"name": "Stakeable",
							"nameLocation": "185:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "379:110:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 6,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "463:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "463:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage_ptr_$returns$_t_struct$_Stakeholder_$28_storage_$bound_to$_t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Stakeable.Stakeholder storage ref[] storage pointer) returns (struct Stakeable.Stakeholder storage ref)"
														}
													},
													"id": 9,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "463:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
														"typeString": "struct Stakeable.Stakeholder storage ref"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "463:19:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "203:157:0",
										"text": " @notice Constructor since this contract is not ment to be used without inheritance\n push once to stakeholders for it to work proplerly"
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "376:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "379:0:0"
									},
									"scope": 352,
									"src": "365:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Stakeable.Stake",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "753:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "745:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 13,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "745:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "775:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "767:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 15,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "767:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "since",
											"nameLocation": "799:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "791:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 17,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "791:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "claimable",
											"nameLocation": "921:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "913:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 19,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "913:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "730:5:0",
									"nodeType": "StructDefinition",
									"scope": 352,
									"src": "723:214:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakeable.Stakeholder",
									"id": 28,
									"members": [
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "1055:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "1047:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 22,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1047:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 27,
											"mutability": "mutable",
											"name": "address_stakes",
											"nameLocation": "1077:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "1069:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage_ptr",
												"typeString": "struct Stakeable.Stake[]"
											},
											"typeName": {
												"baseType": {
													"id": 25,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 24,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 21,
														"src": "1069:5:0"
													},
													"referencedDeclaration": 21,
													"src": "1069:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$21_storage_ptr",
														"typeString": "struct Stakeable.Stake"
													}
												},
												"id": 26,
												"nodeType": "ArrayTypeName",
												"src": "1069:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage_ptr",
													"typeString": "struct Stakeable.Stake[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stakeholder",
									"nameLocation": "1026:11:0",
									"nodeType": "StructDefinition",
									"scope": 352,
									"src": "1019:88:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakeable.StakingSummary",
									"id": 35,
									"members": [
										{
											"constant": false,
											"id": 30,
											"mutability": "mutable",
											"name": "total_amount",
											"nameLocation": "1286:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "1278:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 29,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1278:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "stakes",
											"nameLocation": "1317:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "1309:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage_ptr",
												"typeString": "struct Stakeable.Stake[]"
											},
											"typeName": {
												"baseType": {
													"id": 32,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 31,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 21,
														"src": "1309:5:0"
													},
													"referencedDeclaration": 21,
													"src": "1309:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$21_storage_ptr",
														"typeString": "struct Stakeable.Stake"
													}
												},
												"id": 33,
												"nodeType": "ArrayTypeName",
												"src": "1309:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage_ptr",
													"typeString": "struct Stakeable.Stake[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingSummary",
									"nameLocation": "1253:14:0",
									"nodeType": "StructDefinition",
									"scope": 352,
									"src": "1246:85:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1337:225:0",
										"text": " @notice \n   This is a array where we store all Stakes that are performed on the Contract\n   The stakes for each address are stored at a certain index, the index can be found using the stakes mapping"
									},
									"id": 40,
									"mutability": "mutable",
									"name": "stakeholders",
									"nameLocation": "1590:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "1567:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
										"typeString": "struct Stakeable.Stakeholder[]"
									},
									"typeName": {
										"baseType": {
											"id": 38,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 37,
												"name": "Stakeholder",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "1567:11:0"
											},
											"referencedDeclaration": 28,
											"src": "1567:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stakeholder_$28_storage_ptr",
												"typeString": "struct Stakeable.Stakeholder"
											}
										},
										"id": 39,
										"nodeType": "ArrayTypeName",
										"src": "1567:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage_ptr",
											"typeString": "struct Stakeable.Stakeholder[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1608:110:0",
										"text": " @notice \n stakes is used to keep track of the INDEX for the stakers in the stakes array"
									},
									"id": 45,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "1760:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "1723:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 44,
										"keyType": {
											"id": 42,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1731:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1723:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 43,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1742:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1772:123:0",
										"text": " @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
									},
									"id": 56,
									"name": "Staked",
									"nameLocation": "1907:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1930:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1914:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1944:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1936:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1960:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1952:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1975:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1967:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:72:0"
									},
									"src": "1901:85:0"
								},
								{
									"constant": false,
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "1992:192:0",
										"text": " @notice\nrewardPerHour is 100 because it is used to represent 0.001, since we only use integer numbers\nThis will give users 0.01% reward for each staked token / H"
									},
									"id": 60,
									"mutability": "mutable",
									"name": "rewardPerHour",
									"nameLocation": "2206:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "2189:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 58,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2189:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 59,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2222:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "2406:437:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 68,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "2496:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2496:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage_ptr_$returns$_t_struct$_Stakeholder_$28_storage_$bound_to$_t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Stakeable.Stakeholder storage ref[] storage pointer) returns (struct Stakeable.Stakeholder storage ref)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2496:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
														"typeString": "struct Stakeable.Stakeholder storage ref"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2496:19:0"
											},
											{
												"assignments": [
													74
												],
												"declarations": [
													{
														"constant": false,
														"id": 74,
														"mutability": "mutable",
														"name": "userIndex",
														"nameLocation": "2603:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 95,
														"src": "2595:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 73,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2595:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 79,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 75,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "2615:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2615:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2637:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2615:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2595:43:0"
											},
											{
												"expression": {
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 80,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "2695:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																	"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
																}
															},
															"id": 82,
															"indexExpression": {
																"id": 81,
																"name": "userIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "2708:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2695:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
																"typeString": "struct Stakeable.Stakeholder storage ref"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "user",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "2695:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 84,
														"name": "staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "2726:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2695:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2695:37:0"
											},
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 87,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "2783:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 89,
														"indexExpression": {
															"id": 88,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2790:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2783:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 90,
														"name": "userIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "2800:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2783:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "2783:26:0"
											},
											{
												"expression": {
													"id": 93,
													"name": "userIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 74,
													"src": "2826:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 67,
												"id": 94,
												"nodeType": "Return",
												"src": "2819:16:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2232:102:0",
										"text": " @notice _addStakeholder takes care of adding a stakeholder to the stakeholders array"
									},
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addStakeholder",
									"nameLocation": "2348:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "2372:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "2364:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:16:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "2398:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2397:9:0"
									},
									"scope": 352,
									"src": "2339:504:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "3092:1135:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 103,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3165:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3175:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3165:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b65206e6f7468696e67",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3178:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
																"typeString": "literal_string \"Cannot stake nothing\""
															},
															"value": "Cannot stake nothing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
																"typeString": "literal_string \"Cannot stake nothing\""
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3157:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "3157:44:0"
											},
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "3325:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 155,
														"src": "3317:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3317:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 115,
												"initialValue": {
													"baseExpression": {
														"id": 111,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "3333:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 114,
													"indexExpression": {
														"expression": {
															"id": 112,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3340:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3340:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3333:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3317:34:0"
											},
											{
												"assignments": [
													117
												],
												"declarations": [
													{
														"constant": false,
														"id": 117,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "3456:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 155,
														"src": "3448:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3448:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 120,
												"initialValue": {
													"expression": {
														"id": 118,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "3468:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "3468:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3448:35:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 121,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "3577:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3586:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3577:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 132,
												"nodeType": "IfStatement",
												"src": "3574:328:0",
												"trueBody": {
													"id": 131,
													"nodeType": "Block",
													"src": "3588:314:0",
													"statements": [
														{
															"expression": {
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 124,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "3856:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 126,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3880:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3880:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 125,
																		"name": "_addStakeholder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3864:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3864:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3856:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 130,
															"nodeType": "ExpressionStatement",
															"src": "3856:35:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 139,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4075:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4075:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 141,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "4087:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 142,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 117,
																	"src": "4096:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4106:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 138,
																"name": "Stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "4069:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Stake_$21_storage_ptr_$",
																	"typeString": "type(struct Stakeable.Stake storage pointer)"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4069:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																"typeString": "struct Stakeable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																"typeString": "struct Stakeable.Stake memory"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 133,
																	"name": "stakeholders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "4029:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																		"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
																	}
																},
																"id": 135,
																"indexExpression": {
																	"id": 134,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "4042:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4029:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
																	"typeString": "struct Stakeable.Stakeholder storage ref"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "address_stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "4029:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage",
																"typeString": "struct Stakeable.Stake storage ref[] storage ref"
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4029:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$21_storage_$dyn_storage_ptr_$_t_struct$_Stake_$21_storage_$returns$__$bound_to$_t_array$_t_struct$_Stake_$21_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Stakeable.Stake storage ref[] storage pointer,struct Stakeable.Stake storage ref)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4029:80:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 148,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4183:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4183:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 150,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "4195:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 151,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "4204:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 152,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "4210:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 147,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "4176:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4176:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "EmitStatement",
												"src": "4171:49:0"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "2849:197:0",
										"text": " @notice\n _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n StakeID "
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stake",
									"nameLocation": "3060:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3075:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "3067:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3067:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3066:17:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3092:0:0"
									},
									"scope": 352,
									"src": "3051:1176:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "4509:715:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 169,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 165,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "5124:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 166,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "5124:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"expression": {
																								"id": 167,
																								"name": "_current_stake",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 160,
																								"src": "5142:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																									"typeString": "struct Stakeable.Stake memory"
																								}
																							},
																							"id": 168,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "since",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 18,
																							"src": "5142:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5124:38:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 170,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5123:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5166:7:0",
																				"subdenomination": "hours",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3600_by_1",
																					"typeString": "int_const 3600"
																				},
																				"value": "1"
																			},
																			"src": "5123:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 173,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5122:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"id": 174,
																		"name": "_current_stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 160,
																		"src": "5177:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																			"typeString": "struct Stakeable.Stake memory"
																		}
																	},
																	"id": 175,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "5177:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5122:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 177,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5121:78:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 178,
														"name": "rewardPerHour",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "5202:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5121:94:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 180,
												"nodeType": "Return",
												"src": "5114:101:0"
											}
										]
									},
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "4233:180:0",
										"text": " @notice\n calculateStakeReward is used to calculate how much a user should be rewarded for their stakes\n and the duration the stake has been active"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakeReward",
									"nameLocation": "4429:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "_current_stake",
												"nameLocation": "4463:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "4450:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
													"typeString": "struct Stakeable.Stake"
												},
												"typeName": {
													"id": 159,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 158,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 21,
														"src": "4450:5:0"
													},
													"referencedDeclaration": 21,
													"src": "4450:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$21_storage_ptr",
														"typeString": "struct Stakeable.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:29:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "4501:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4500:9:0"
									},
									"scope": 352,
									"src": "4420:804:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "5648:1094:0",
										"statements": [
											{
												"assignments": [
													193
												],
												"declarations": [
													{
														"constant": false,
														"id": 193,
														"mutability": "mutable",
														"name": "user_index",
														"nameLocation": "5740:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 273,
														"src": "5732:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 192,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5732:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 198,
												"initialValue": {
													"baseExpression": {
														"id": 194,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "5753:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 197,
													"indexExpression": {
														"expression": {
															"id": 195,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5760:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5760:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5753:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5732:39:0"
											},
											{
												"assignments": [
													201
												],
												"declarations": [
													{
														"constant": false,
														"id": 201,
														"mutability": "mutable",
														"name": "current_stake",
														"nameLocation": "5794:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 273,
														"src": "5781:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
															"typeString": "struct Stakeable.Stake"
														},
														"typeName": {
															"id": 200,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 199,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 21,
																"src": "5781:5:0"
															},
															"referencedDeclaration": 21,
															"src": "5781:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$21_storage_ptr",
																"typeString": "struct Stakeable.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 208,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 202,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "5810:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																	"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
																}
															},
															"id": 204,
															"indexExpression": {
																"id": 203,
																"name": "user_index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5823:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5810:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
																"typeString": "struct Stakeable.Stakeholder storage ref"
															}
														},
														"id": 205,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "address_stakes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "5810:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage",
															"typeString": "struct Stakeable.Stake storage ref[] storage ref"
														}
													},
													"id": 207,
													"indexExpression": {
														"id": 206,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "5850:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5810:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$21_storage",
														"typeString": "struct Stakeable.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 210,
																	"name": "current_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "5874:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																		"typeString": "struct Stakeable.Stake memory"
																	}
																},
																"id": 211,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 16,
																"src": "5874:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 212,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "5898:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5874:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e673a2043616e6e6f74207769746864726177206d6f7265207468616e20796f752068617665207374616b6564",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5906:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee4d510ac6284dd4e6c153f8559b79fe87c2ac83701222cefa2b5a94cc595d9a",
																"typeString": "literal_string \"Staking: Cannot withdraw more than you have staked\""
															},
															"value": "Staking: Cannot withdraw more than you have staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee4d510ac6284dd4e6c153f8559b79fe87c2ac83701222cefa2b5a94cc595d9a",
																"typeString": "literal_string \"Staking: Cannot withdraw more than you have staked\""
															}
														],
														"id": 209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5866:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5866:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "5866:93:0"
											},
											{
												"assignments": [
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "6055:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 273,
														"src": "6047:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 217,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6047:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 222,
												"initialValue": {
													"arguments": [
														{
															"id": 220,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6085:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																"typeString": "struct Stakeable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																"typeString": "struct Stakeable.Stake memory"
															}
														],
														"id": 219,
														"name": "calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "6064:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$21_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct Stakeable.Stake memory) view returns (uint256)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6064:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6047:52:0"
											},
											{
												"expression": {
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 223,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6164:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																"typeString": "struct Stakeable.Stake memory"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "6164:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 226,
																"name": "current_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "6187:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																	"typeString": "struct Stakeable.Stake memory"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 16,
															"src": "6187:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 228,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "6210:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6187:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6164:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "6164:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 232,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6304:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																"typeString": "struct Stakeable.Stake memory"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "6304:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6328:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6304:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 267,
													"nodeType": "Block",
													"src": "6415:286:0",
													"statements": [
														{
															"expression": {
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 245,
																					"name": "stakeholders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 40,
																					"src": "6488:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																						"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
																					}
																				},
																				"id": 247,
																				"indexExpression": {
																					"id": 246,
																					"name": "user_index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 193,
																					"src": "6501:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6488:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
																					"typeString": "struct Stakeable.Stakeholder storage ref"
																				}
																			},
																			"id": 248,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "address_stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 27,
																			"src": "6488:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage",
																				"typeString": "struct Stakeable.Stake storage ref[] storage ref"
																			}
																		},
																		"id": 250,
																		"indexExpression": {
																			"id": 249,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 187,
																			"src": "6528:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6488:46:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$21_storage",
																			"typeString": "struct Stakeable.Stake storage ref"
																		}
																	},
																	"id": 251,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "6488:53:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 252,
																		"name": "current_stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 201,
																		"src": "6544:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																			"typeString": "struct Stakeable.Stake memory"
																		}
																	},
																	"id": 253,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "6544:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6488:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 255,
															"nodeType": "ExpressionStatement",
															"src": "6488:76:0"
														},
														{
															"expression": {
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 256,
																					"name": "stakeholders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 40,
																					"src": "6615:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																						"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
																					}
																				},
																				"id": 258,
																				"indexExpression": {
																					"id": 257,
																					"name": "user_index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 193,
																					"src": "6628:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6615:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
																					"typeString": "struct Stakeable.Stakeholder storage ref"
																				}
																			},
																			"id": 259,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "address_stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 27,
																			"src": "6615:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage",
																				"typeString": "struct Stakeable.Stake storage ref[] storage ref"
																			}
																		},
																		"id": 261,
																		"indexExpression": {
																			"id": 260,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 187,
																			"src": "6655:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6615:46:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$21_storage",
																			"typeString": "struct Stakeable.Stake storage ref"
																		}
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "since",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 18,
																	"src": "6615:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 263,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6670:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6670:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6615:70:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 266,
															"nodeType": "ExpressionStatement",
															"src": "6615:70:0"
														}
													]
												},
												"id": 268,
												"nodeType": "IfStatement",
												"src": "6301:400:0",
												"trueBody": {
													"id": 244,
													"nodeType": "Block",
													"src": "6330:80:0",
													"statements": [
														{
															"expression": {
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "6345:53:0",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 236,
																				"name": "stakeholders",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 40,
																				"src": "6352:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																					"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
																				}
																			},
																			"id": 238,
																			"indexExpression": {
																				"id": 237,
																				"name": "user_index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 193,
																				"src": "6365:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6352:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
																				"typeString": "struct Stakeable.Stakeholder storage ref"
																			}
																		},
																		"id": 239,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "address_stakes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "6352:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage",
																			"typeString": "struct Stakeable.Stake storage ref[] storage ref"
																		}
																	},
																	"id": 241,
																	"indexExpression": {
																		"id": 240,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "6392:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6352:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$21_storage",
																		"typeString": "struct Stakeable.Stake storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 243,
															"nodeType": "ExpressionStatement",
															"src": "6345:53:0"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 269,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6719:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 270,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "6728:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6719:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 191,
												"id": 272,
												"nodeType": "Return",
												"src": "6712:22:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "5230:332:0",
										"text": " @notice\n withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n Notice index of the stake is the users stake counter, starting at 0 for the first stake\n Will return the amount to MINT onto the acount\n Will also calculateStakeReward and reset timer"
									},
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawStake",
									"nameLocation": "5577:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5600:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5592:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "5616:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5608:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5591:31:0"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5640:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5639:9:0"
									},
									"scope": 352,
									"src": "5568:1174:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "6970:751:0",
										"statements": [
											{
												"assignments": [
													284
												],
												"declarations": [
													{
														"constant": false,
														"id": 284,
														"mutability": "mutable",
														"name": "totalStakeAmount",
														"nameLocation": "7068:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "7060:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 283,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7060:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"nodeType": "VariableDeclarationStatement",
												"src": "7060:24:0"
											},
											{
												"assignments": [
													288
												],
												"declarations": [
													{
														"constant": false,
														"id": 288,
														"mutability": "mutable",
														"name": "summary",
														"nameLocation": "7185:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "7163:29:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
															"typeString": "struct Stakeable.StakingSummary"
														},
														"typeName": {
															"id": 287,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 286,
																"name": "StakingSummary",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7163:14:0"
															},
															"referencedDeclaration": 35,
															"src": "7163:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$35_storage_ptr",
																"typeString": "struct Stakeable.StakingSummary"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 298,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7210:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 291,
																	"name": "stakeholders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "7213:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																		"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
																	}
																},
																"id": 295,
																"indexExpression": {
																	"baseExpression": {
																		"id": 292,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "7226:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 294,
																	"indexExpression": {
																		"id": 293,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 277,
																		"src": "7233:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7226:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7213:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
																	"typeString": "struct Stakeable.Stakeholder storage ref"
																}
															},
															"id": 296,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "address_stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "7213:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage",
																"typeString": "struct Stakeable.Stake storage ref[] storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage",
																"typeString": "struct Stakeable.Stake storage ref[] storage ref"
															}
														],
														"id": 289,
														"name": "StakingSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "7195:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakingSummary_$35_storage_ptr_$",
															"typeString": "type(struct Stakeable.StakingSummary storage pointer)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7195:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
														"typeString": "struct Stakeable.StakingSummary memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7163:95:0"
											},
											{
												"body": {
													"id": 340,
													"nodeType": "Block",
													"src": "7379:219:0",
													"statements": [
														{
															"assignments": [
																313
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 313,
																	"mutability": "mutable",
																	"name": "availableReward",
																	"nameLocation": "7400:15:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 340,
																	"src": "7392:23:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 312,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7392:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 320,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"expression": {
																				"id": 315,
																				"name": "summary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 288,
																				"src": "7439:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
																					"typeString": "struct Stakeable.StakingSummary memory"
																				}
																			},
																			"id": 316,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 34,
																			"src": "7439:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct Stakeable.Stake memory[] memory"
																			}
																		},
																		"id": 318,
																		"indexExpression": {
																			"id": 317,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 300,
																			"src": "7454:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7439:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																			"typeString": "struct Stakeable.Stake memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																			"typeString": "struct Stakeable.Stake memory"
																		}
																	],
																	"id": 314,
																	"name": "calculateStakeReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "7418:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$21_memory_ptr_$returns$_t_uint256_$",
																		"typeString": "function (struct Stakeable.Stake memory) view returns (uint256)"
																	}
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7418:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7392:65:0"
														},
														{
															"expression": {
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 321,
																				"name": "summary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 288,
																				"src": "7470:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
																					"typeString": "struct Stakeable.StakingSummary memory"
																				}
																			},
																			"id": 324,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 34,
																			"src": "7470:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct Stakeable.Stake memory[] memory"
																			}
																		},
																		"id": 325,
																		"indexExpression": {
																			"id": 323,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 300,
																			"src": "7485:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7470:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																			"typeString": "struct Stakeable.Stake memory"
																		}
																	},
																	"id": 326,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimable",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 20,
																	"src": "7470:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 327,
																	"name": "availableReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "7500:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7470:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 329,
															"nodeType": "ExpressionStatement",
															"src": "7470:45:0"
														},
														{
															"expression": {
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 330,
																	"name": "totalStakeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "7528:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 331,
																		"name": "totalStakeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "7547:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 332,
																					"name": "summary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 288,
																					"src": "7564:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
																						"typeString": "struct Stakeable.StakingSummary memory"
																					}
																				},
																				"id": 333,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "7564:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct Stakeable.Stake memory[] memory"
																				}
																			},
																			"id": 335,
																			"indexExpression": {
																				"id": 334,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 300,
																				"src": "7579:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7564:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																				"typeString": "struct Stakeable.Stake memory"
																			}
																		},
																		"id": 336,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7564:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7547:41:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7528:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 339,
															"nodeType": "ExpressionStatement",
															"src": "7528:60:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 303,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "7345:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 304,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "7349:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
																	"typeString": "struct Stakeable.StakingSummary memory"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "7349:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Stakeable.Stake memory[] memory"
															}
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7349:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7345:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 341,
												"initializationExpression": {
													"assignments": [
														300
													],
													"declarations": [
														{
															"constant": false,
															"id": 300,
															"mutability": "mutable",
															"name": "s",
															"nameLocation": "7338:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 341,
															"src": "7330:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 299,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7330:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 302,
													"initialValue": {
														"hexValue": "30",
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7342:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7330:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 308,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "7372:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7377:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "7372:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 311,
													"nodeType": "ExpressionStatement",
													"src": "7372:6:0"
												},
												"nodeType": "ForStatement",
												"src": "7325:273:0"
											},
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 342,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "7651:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
																"typeString": "struct Stakeable.StakingSummary memory"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 30,
														"src": "7651:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 345,
														"name": "totalStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "7674:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7651:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "7651:39:0"
											},
											{
												"expression": {
													"id": 348,
													"name": "summary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 288,
													"src": "7707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
														"typeString": "struct Stakeable.StakingSummary memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 349,
												"nodeType": "Return",
												"src": "7700:14:0"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "6749:139:0",
										"text": " @notice\n hasStake is used to check if a account has stakes and the total amount along with all the seperate stakes"
									},
									"functionSelector": "e73e14bf",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasStake",
									"nameLocation": "6902:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "6919:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "6911:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6910:17:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "6948:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
													"typeString": "struct Stakeable.StakingSummary"
												},
												"typeName": {
													"id": 280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 279,
														"name": "StakingSummary",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 35,
														"src": "6948:14:0"
													},
													"referencedDeclaration": 35,
													"src": "6948:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$35_storage_ptr",
														"typeString": "struct Stakeable.StakingSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6947:23:0"
									},
									"scope": 352,
									"src": "6893:828:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 353,
							"src": "176:7548:0",
							"usedErrors": []
						}
					],
					"src": "32:7692:0"
				},
				"id": 0
			}
		}
	}
}