{
	"id": "bba4d5bd3086896748c7fe662dcf9ba0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Stakeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/**\n* @notice Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities\n*/\ncontract Stakeable {\n\n\n    /**\n    * @notice Constructor since this contract is not ment to be used without inheritance\n    * push once to stakeholders for it to work proplerly\n     */\n    constructor() {\n        // This push is needed so we avoid index 0 causing bug of index-1\n        stakeholders.push();\n    }\n    /**\n     * @notice\n     * A stake struct is used to represent the way we store stakes, \n     * A Stake will contain the users address, the amount staked and a timestamp, \n     * Since which is when the stake was made\n     */\n    struct Stake{\n        address user;\n        uint256 amount;\n        uint256 since;\n        // This claimable field is new and used to tell how big of a reward is currently available\n        uint256 claimable;\n    }\n    /**\n    * @notice Stakeholder is a staker that has active stakes\n     */\n    struct Stakeholder{\n        address user;\n        Stake[] address_stakes;\n        \n    }\n     /**\n     * @notice\n     * StakingSummary is a struct that is used to contain all stakes performed by a certain account\n     */ \n     struct StakingSummary{\n         uint256 total_amount;\n         Stake[] stakes;\n     }\n\n    /**\n    * @notice \n    *   This is a array where we store all Stakes that are performed on the Contract\n    *   The stakes for each address are stored at a certain index, the index can be found using the stakes mapping\n    */\n    Stakeholder[] internal stakeholders;\n    /**\n    * @notice \n    * stakes is used to keep track of the INDEX for the stakers in the stakes array\n     */\n    mapping(address => uint256) internal stakes;\n    /**\n    * @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\n     */\n     event Staked(address indexed user, uint256 amount, uint256 index, uint256 timestamp);\n\n    /**\n     * @notice\n      rewardPerHour is 1000 because it is used to represent 0.001, since we only use integer numbers\n      This will give users 0.1% reward for each staked token / H\n     */\n    uint256 internal rewardPerHour = 100000000;\n\n    /**\n    * @notice _addStakeholder takes care of adding a stakeholder to the stakeholders array\n     */\n    function _addStakeholder(address staker) internal returns (uint256){\n        // Push a empty item to the Array to make space for our new stakeholder\n        stakeholders.push();\n        // Calculate the index of the last item in the array by Len-1\n        uint256 userIndex = stakeholders.length - 1;\n        // Assign the address to the new index\n        stakeholders[userIndex].user = staker;\n        // Add index to the stakeHolders\n        stakes[staker] = userIndex;\n        return userIndex; \n    }\n\n    /**\n    * @notice\n    * _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n    * StakeID \n    */\n    function _stake(uint256 _amount) internal{\n        // Simple check so that user does not stake 0 \n        require(_amount > 0, \"Cannot stake nothing\");\n        \n\n        // Mappings in solidity creates all values, but empty, so we can just check the address\n        uint256 index = stakes[msg.sender];\n        // block.timestamp = timestamp of the current block in seconds since the epoch\n        uint256 timestamp = block.timestamp;\n        // See if the staker already has a staked index or if its the first time\n        if(index == 0){\n            // This stakeholder stakes for the first time\n            // We need to add him to the stakeHolders and also map it into the Index of the stakes\n            // The index returned will be the index of the stakeholder in the stakeholders array\n            index = _addStakeholder(msg.sender);\n        }\n\n        // Use the index to push a new Stake\n        // push a newly created Stake with the current block timestamp.\n        stakeholders[index].address_stakes.push(Stake(msg.sender, _amount, timestamp,0));\n        // Emit an event that the stake has occured\n        emit Staked(msg.sender, _amount, index,timestamp);\n    }\n\n    /**\n      * @notice\n      * calculateStakeReward is used to calculate how much a user should be rewarded for their stakes\n      * and the duration the stake has been active\n     */\n      function calculateStakeReward(Stake memory _current_stake) internal view returns(uint256){\n          // First calculate how long the stake has been active\n          // Use current seconds since epoch - the seconds since epoch the stake was made\n          // The output will be duration in SECONDS ,\n          // We will reward the user 0.1% per Hour So thats 0.1% per 3600 seconds\n          // the alghoritm is  seconds = block.timestamp - stake seconds (block.timestap - _stake.since)\n          // hours = Seconds / 3600 (seconds /3600) 3600 is an variable in Solidity names hours\n          // we then multiply each token by the hours staked , then divide by the rewardPerHour rate \n          return (((block.timestamp - _current_stake.since) / 1 hours) * _current_stake.amount) / rewardPerHour;\n      }\n\n    /**\n     * @notice\n     * withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n     * Notice index of the stake is the users stake counter, starting at 0 for the first stake\n     * Will return the amount to MINT onto the acount\n     * Will also calculateStakeReward and reset timer\n    */\n     function _withdrawStake(uint256 amount, uint256 index) internal returns(uint256){\n         // Grab user_index which is the index to use to grab the Stake[]\n        uint256 user_index = stakes[msg.sender];\n        Stake memory current_stake = stakeholders[user_index].address_stakes[index];\n        require(current_stake.amount >= amount, \"Staking: Cannot withdraw more than you have staked\");\n\n         // Calculate available Reward first before we start modifying data\n         uint256 reward = calculateStakeReward(current_stake);\n         // Remove by subtracting the money unstaked \n         current_stake.amount = current_stake.amount - amount;\n         // If stake is empty, 0, then remove it from the array of stakes\n         if(current_stake.amount == 0){\n             delete stakeholders[user_index].address_stakes[index];\n         }else {\n             // If not empty then replace the value of it\n             stakeholders[user_index].address_stakes[index].amount = current_stake.amount;\n             // Reset timer of stake\n            stakeholders[user_index].address_stakes[index].since = block.timestamp;    \n         }\n\n         return amount + reward;\n     }\n\n     /**\n     * @notice\n     * hasStake is used to check if a account has stakes and the total amount along with all the seperate stakes\n     */\n    function hasStake(address _staker) public view returns(StakingSummary memory){\n        // totalStakeAmount is used to count total staked amount of the address\n        uint256 totalStakeAmount; \n        // Keep a summary in memory since we need to calculate this\n        StakingSummary memory summary = StakingSummary(0, stakeholders[stakes[_staker]].address_stakes);\n        // Itterate all stakes and grab amount of stakes\n        for (uint256 s = 0; s < summary.stakes.length; s += 1){\n           uint256 availableReward = calculateStakeReward(summary.stakes[s]);\n           summary.stakes[s].claimable = availableReward;\n           totalStakeAmount = totalStakeAmount+summary.stakes[s].amount;\n       }\n       // Assign calculate amount to summary\n       summary.total_amount = totalStakeAmount;\n        return summary;\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Stakeable.sol": {
				"Stakeable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "hasStake",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "total_amount",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "user",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "since",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "claimable",
													"type": "uint256"
												}
											],
											"internalType": "struct Stakeable.Stake[]",
											"name": "stakes",
											"type": "tuple[]"
										}
									],
									"internalType": "struct Stakeable.StakingSummary",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Stakeable.sol\":176:7730  contract Stakeable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Stakeable.sol\":2222:2231  100000000 */\n  0x05f5e100\n    /* \"contracts/Stakeable.sol\":2189:2231  uint256 internal rewardPerHour = 100000000 */\n  0x02\n  sstore\n    /* \"contracts/Stakeable.sol\":365:489  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Stakeable.sol\":463:475  stakeholders */\n  0x00\n    /* \"contracts/Stakeable.sol\":463:482  stakeholders.push() */\n  0x01\n  dup2\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  pop\n  pop\n    /* \"contracts/Stakeable.sol\":176:7730  contract Stakeable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Stakeable.sol\":176:7730  contract Stakeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xe73e14bf\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Stakeable.sol\":6899:7727  function hasStake(address _staker) public view returns(StakingSummary memory){... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/Stakeable.sol\":6954:6975  StakingSummary memory */\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n        /* \"contracts/Stakeable.sol\":7066:7090  uint256 totalStakeAmount */\n      0x00\n        /* \"contracts/Stakeable.sol\":7169:7198  StakingSummary memory summary */\n      dup1\n        /* \"contracts/Stakeable.sol\":7201:7264  StakingSummary(0, stakeholders[stakes[_staker]].address_stakes) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Stakeable.sol\":7216:7217  0 */\n      0x00\n        /* \"contracts/Stakeable.sol\":7201:7264  StakingSummary(0, stakeholders[stakes[_staker]].address_stakes) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Stakeable.sol\":7219:7231  stakeholders */\n      0x00\n        /* \"contracts/Stakeable.sol\":7232:7238  stakes */\n      0x01\n        /* \"contracts/Stakeable.sol\":7232:7247  stakes[_staker] */\n      0x00\n        /* \"contracts/Stakeable.sol\":7239:7246  _staker */\n      dup9\n        /* \"contracts/Stakeable.sol\":7232:7247  stakes[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Stakeable.sol\":7219:7248  stakeholders[stakes[_staker]] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_13\n      jumpi\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n    tag_13:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/Stakeable.sol\":7219:7263  stakeholders[stakes[_staker]].address_stakes */\n      0x01\n      add\n        /* \"contracts/Stakeable.sol\":7201:7264  StakingSummary(0, stakeholders[stakes[_staker]].address_stakes) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_17:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_18\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_17)\n    tag_18:\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n        /* \"contracts/Stakeable.sol\":7169:7264  StakingSummary memory summary = StakingSummary(0, stakeholders[stakes[_staker]].address_stakes) */\n      swap1\n      pop\n        /* \"contracts/Stakeable.sol\":7336:7345  uint256 s */\n      0x00\n        /* \"contracts/Stakeable.sol\":7331:7604  for (uint256 s = 0; s < summary.stakes.length; s += 1){... */\n    tag_20:\n        /* \"contracts/Stakeable.sol\":7355:7362  summary */\n      dup2\n        /* \"contracts/Stakeable.sol\":7355:7369  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":7355:7376  summary.stakes.length */\n      mload\n        /* \"contracts/Stakeable.sol\":7351:7352  s */\n      dup2\n        /* \"contracts/Stakeable.sol\":7351:7376  s < summary.stakes.length */\n      lt\n        /* \"contracts/Stakeable.sol\":7331:7604  for (uint256 s = 0; s < summary.stakes.length; s += 1){... */\n      iszero\n      tag_21\n      jumpi\n        /* \"contracts/Stakeable.sol\":7398:7421  uint256 availableReward */\n      0x00\n        /* \"contracts/Stakeable.sol\":7424:7463  calculateStakeReward(summary.stakes[s]) */\n      tag_23\n        /* \"contracts/Stakeable.sol\":7445:7452  summary */\n      dup4\n        /* \"contracts/Stakeable.sol\":7445:7459  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":7460:7461  s */\n      dup4\n        /* \"contracts/Stakeable.sol\":7445:7462  summary.stakes[s] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_24\n      jumpi\n      tag_25\n      tag_15\n      jump\t// in\n    tag_25:\n    tag_24:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":7424:7444  calculateStakeReward */\n      tag_26\n        /* \"contracts/Stakeable.sol\":7424:7463  calculateStakeReward(summary.stakes[s]) */\n      jump\t// in\n    tag_23:\n        /* \"contracts/Stakeable.sol\":7398:7463  uint256 availableReward = calculateStakeReward(summary.stakes[s]) */\n      swap1\n      pop\n        /* \"contracts/Stakeable.sol\":7506:7521  availableReward */\n      dup1\n        /* \"contracts/Stakeable.sol\":7476:7483  summary */\n      dup4\n        /* \"contracts/Stakeable.sol\":7476:7490  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":7491:7492  s */\n      dup4\n        /* \"contracts/Stakeable.sol\":7476:7493  summary.stakes[s] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_27\n      jumpi\n      tag_28\n      tag_15\n      jump\t// in\n    tag_28:\n    tag_27:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":7476:7503  summary.stakes[s].claimable */\n      0x60\n      add\n        /* \"contracts/Stakeable.sol\":7476:7521  summary.stakes[s].claimable = availableReward */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakeable.sol\":7570:7577  summary */\n      dup3\n        /* \"contracts/Stakeable.sol\":7570:7584  summary.stakes */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":7585:7586  s */\n      dup3\n        /* \"contracts/Stakeable.sol\":7570:7587  summary.stakes[s] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_29\n      jumpi\n      tag_30\n      tag_15\n      jump\t// in\n    tag_30:\n    tag_29:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":7570:7594  summary.stakes[s].amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":7553:7569  totalStakeAmount */\n      dup5\n        /* \"contracts/Stakeable.sol\":7553:7594  totalStakeAmount+summary.stakes[s].amount */\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"contracts/Stakeable.sol\":7534:7594  totalStakeAmount = totalStakeAmount+summary.stakes[s].amount */\n      swap4\n      pop\n        /* \"contracts/Stakeable.sol\":7385:7604  {... */\n      pop\n        /* \"contracts/Stakeable.sol\":7383:7384  1 */\n      0x01\n        /* \"contracts/Stakeable.sol\":7378:7384  s += 1 */\n      dup2\n      tag_33\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_33:\n      swap1\n      pop\n        /* \"contracts/Stakeable.sol\":7331:7604  for (uint256 s = 0; s < summary.stakes.length; s += 1){... */\n      jump(tag_20)\n    tag_21:\n      pop\n        /* \"contracts/Stakeable.sol\":7680:7696  totalStakeAmount */\n      dup2\n        /* \"contracts/Stakeable.sol\":7657:7664  summary */\n      dup2\n        /* \"contracts/Stakeable.sol\":7657:7677  summary.total_amount */\n      0x00\n      add\n        /* \"contracts/Stakeable.sol\":7657:7696  summary.total_amount = totalStakeAmount */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Stakeable.sol\":7713:7720  summary */\n      dup1\n        /* \"contracts/Stakeable.sol\":7706:7720  return summary */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Stakeable.sol\":6899:7727  function hasStake(address _staker) public view returns(StakingSummary memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Stakeable.sol\":4426:5230  function calculateStakeReward(Stake memory _current_stake) internal view returns(uint256){... */\n    tag_26:\n        /* \"contracts/Stakeable.sol\":4507:4514  uint256 */\n      0x00\n        /* \"contracts/Stakeable.sol\":5208:5221  rewardPerHour */\n      sload(0x02)\n        /* \"contracts/Stakeable.sol\":5183:5197  _current_stake */\n      dup3\n        /* \"contracts/Stakeable.sol\":5183:5204  _current_stake.amount */\n      0x20\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":5172:5179  1 hours */\n      0x0e10\n        /* \"contracts/Stakeable.sol\":5148:5162  _current_stake */\n      dup5\n        /* \"contracts/Stakeable.sol\":5148:5168  _current_stake.since */\n      0x40\n      add\n      mload\n        /* \"contracts/Stakeable.sol\":5130:5145  block.timestamp */\n      timestamp\n        /* \"contracts/Stakeable.sol\":5130:5168  block.timestamp - _current_stake.since */\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"contracts/Stakeable.sol\":5129:5179  (block.timestamp - _current_stake.since) / 1 hours */\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"contracts/Stakeable.sol\":5128:5204  ((block.timestamp - _current_stake.since) / 1 hours) * _current_stake.amount */\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"contracts/Stakeable.sol\":5127:5221  (((block.timestamp - _current_stake.since) / 1 hours) * _current_stake.amount) / rewardPerHour */\n      tag_41\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_41:\n        /* \"contracts/Stakeable.sol\":5120:5221  return (((block.timestamp - _current_stake.since) / 1 hours) * _current_stake.amount) / rewardPerHour */\n      swap1\n      pop\n        /* \"contracts/Stakeable.sol\":4426:5230  function calculateStakeReward(Stake memory _current_stake) internal view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_11:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_43:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_45:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_46:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_68\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_45\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_47:\n        /* \"#utility.yul\":641:665   */\n      tag_70\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_46\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_71\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_71:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_48:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_73\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_47\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_6:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_76\n      tag_43\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":917:1036   */\n    tag_75:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_77\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_48\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_49:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1367   */\n    tag_50:\n        /* \"#utility.yul\":1336:1360   */\n      tag_80\n        /* \"#utility.yul\":1354:1359   */\n      dup2\n        /* \"#utility.yul\":1336:1360   */\n      tag_49\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1331:1334   */\n      dup3\n        /* \"#utility.yul\":1324:1361   */\n      mstore\n        /* \"#utility.yul\":1259:1367   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1373:1508   */\n    tag_51:\n        /* \"#utility.yul\":1461:1467   */\n      0x00\n        /* \"#utility.yul\":1495:1500   */\n      dup2\n        /* \"#utility.yul\":1489:1501   */\n      mload\n        /* \"#utility.yul\":1479:1501   */\n      swap1\n      pop\n        /* \"#utility.yul\":1373:1508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1514:1709   */\n    tag_52:\n        /* \"#utility.yul\":1624:1635   */\n      0x00\n        /* \"#utility.yul\":1658:1664   */\n      dup3\n        /* \"#utility.yul\":1653:1656   */\n      dup3\n        /* \"#utility.yul\":1646:1665   */\n      mstore\n        /* \"#utility.yul\":1698:1702   */\n      0x20\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1689:1703   */\n      add\n        /* \"#utility.yul\":1674:1703   */\n      swap1\n      pop\n        /* \"#utility.yul\":1514:1709   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1715:1868   */\n    tag_53:\n        /* \"#utility.yul\":1803:1807   */\n      0x00\n        /* \"#utility.yul\":1826:1829   */\n      dup2\n        /* \"#utility.yul\":1818:1829   */\n      swap1\n      pop\n        /* \"#utility.yul\":1856:1860   */\n      0x20\n        /* \"#utility.yul\":1851:1854   */\n      dup3\n        /* \"#utility.yul\":1847:1861   */\n      add\n        /* \"#utility.yul\":1839:1861   */\n      swap1\n      pop\n        /* \"#utility.yul\":1715:1868   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:1982   */\n    tag_54:\n        /* \"#utility.yul\":1951:1975   */\n      tag_85\n        /* \"#utility.yul\":1969:1974   */\n      dup2\n        /* \"#utility.yul\":1951:1975   */\n      tag_46\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1946:1949   */\n      dup3\n        /* \"#utility.yul\":1939:1976   */\n      mstore\n        /* \"#utility.yul\":1874:1982   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2044:2889   */\n    tag_55:\n        /* \"#utility.yul\":2173:2177   */\n      0x80\n        /* \"#utility.yul\":2168:2171   */\n      dup3\n        /* \"#utility.yul\":2164:2178   */\n      add\n        /* \"#utility.yul\":2260:2264   */\n      0x00\n        /* \"#utility.yul\":2253:2258   */\n      dup3\n        /* \"#utility.yul\":2249:2265   */\n      add\n        /* \"#utility.yul\":2243:2266   */\n      mload\n        /* \"#utility.yul\":2279:2342   */\n      tag_87\n        /* \"#utility.yul\":2336:2340   */\n      0x00\n        /* \"#utility.yul\":2331:2334   */\n      dup6\n        /* \"#utility.yul\":2327:2341   */\n      add\n        /* \"#utility.yul\":2313:2325   */\n      dup3\n        /* \"#utility.yul\":2279:2342   */\n      tag_54\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2188:2352   */\n      pop\n        /* \"#utility.yul\":2436:2440   */\n      0x20\n        /* \"#utility.yul\":2429:2434   */\n      dup3\n        /* \"#utility.yul\":2425:2441   */\n      add\n        /* \"#utility.yul\":2419:2442   */\n      mload\n        /* \"#utility.yul\":2455:2518   */\n      tag_88\n        /* \"#utility.yul\":2512:2516   */\n      0x20\n        /* \"#utility.yul\":2507:2510   */\n      dup6\n        /* \"#utility.yul\":2503:2517   */\n      add\n        /* \"#utility.yul\":2489:2501   */\n      dup3\n        /* \"#utility.yul\":2455:2518   */\n      tag_50\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2362:2528   */\n      pop\n        /* \"#utility.yul\":2611:2615   */\n      0x40\n        /* \"#utility.yul\":2604:2609   */\n      dup3\n        /* \"#utility.yul\":2600:2616   */\n      add\n        /* \"#utility.yul\":2594:2617   */\n      mload\n        /* \"#utility.yul\":2630:2693   */\n      tag_89\n        /* \"#utility.yul\":2687:2691   */\n      0x40\n        /* \"#utility.yul\":2682:2685   */\n      dup6\n        /* \"#utility.yul\":2678:2692   */\n      add\n        /* \"#utility.yul\":2664:2676   */\n      dup3\n        /* \"#utility.yul\":2630:2693   */\n      tag_50\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2538:2703   */\n      pop\n        /* \"#utility.yul\":2790:2794   */\n      0x60\n        /* \"#utility.yul\":2783:2788   */\n      dup3\n        /* \"#utility.yul\":2779:2795   */\n      add\n        /* \"#utility.yul\":2773:2796   */\n      mload\n        /* \"#utility.yul\":2809:2872   */\n      tag_90\n        /* \"#utility.yul\":2866:2870   */\n      0x60\n        /* \"#utility.yul\":2861:2864   */\n      dup6\n        /* \"#utility.yul\":2857:2871   */\n      add\n        /* \"#utility.yul\":2843:2855   */\n      dup3\n        /* \"#utility.yul\":2809:2872   */\n      tag_50\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2713:2882   */\n      pop\n        /* \"#utility.yul\":2142:2889   */\n      pop\n        /* \"#utility.yul\":2044:2889   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2895:3158   */\n    tag_56:\n        /* \"#utility.yul\":3006:3016   */\n      0x00\n        /* \"#utility.yul\":3027:3115   */\n      tag_92\n        /* \"#utility.yul\":3111:3114   */\n      dup4\n        /* \"#utility.yul\":3103:3109   */\n      dup4\n        /* \"#utility.yul\":3027:3115   */\n      tag_55\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3147:3151   */\n      0x80\n        /* \"#utility.yul\":3142:3145   */\n      dup4\n        /* \"#utility.yul\":3138:3152   */\n      add\n        /* \"#utility.yul\":3124:3152   */\n      swap1\n      pop\n        /* \"#utility.yul\":2895:3158   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3164:3298   */\n    tag_57:\n        /* \"#utility.yul\":3255:3259   */\n      0x00\n        /* \"#utility.yul\":3287:3291   */\n      0x20\n        /* \"#utility.yul\":3282:3285   */\n      dup3\n        /* \"#utility.yul\":3278:3292   */\n      add\n        /* \"#utility.yul\":3270:3292   */\n      swap1\n      pop\n        /* \"#utility.yul\":3164:3298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3364:4244   */\n    tag_58:\n        /* \"#utility.yul\":3515:3518   */\n      0x00\n        /* \"#utility.yul\":3544:3619   */\n      tag_95\n        /* \"#utility.yul\":3613:3618   */\n      dup3\n        /* \"#utility.yul\":3544:3619   */\n      tag_51\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":3635:3732   */\n      tag_96\n        /* \"#utility.yul\":3725:3731   */\n      dup2\n        /* \"#utility.yul\":3720:3723   */\n      dup6\n        /* \"#utility.yul\":3635:3732   */\n      tag_52\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3628:3732   */\n      swap4\n      pop\n        /* \"#utility.yul\":3756:3833   */\n      tag_97\n        /* \"#utility.yul\":3827:3832   */\n      dup4\n        /* \"#utility.yul\":3756:3833   */\n      tag_53\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3856:3863   */\n      dup1\n        /* \"#utility.yul\":3887:3888   */\n      0x00\n        /* \"#utility.yul\":3872:4219   */\n    tag_98:\n        /* \"#utility.yul\":3897:3903   */\n      dup4\n        /* \"#utility.yul\":3894:3895   */\n      dup2\n        /* \"#utility.yul\":3891:3904   */\n      lt\n        /* \"#utility.yul\":3872:4219   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":3973:3979   */\n      dup2\n        /* \"#utility.yul\":3967:3980   */\n      mload\n        /* \"#utility.yul\":4000:4105   */\n      tag_101\n        /* \"#utility.yul\":4101:4104   */\n      dup9\n        /* \"#utility.yul\":4086:4099   */\n      dup3\n        /* \"#utility.yul\":4000:4105   */\n      tag_56\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":3993:4105   */\n      swap8\n      pop\n        /* \"#utility.yul\":4128:4209   */\n      tag_102\n        /* \"#utility.yul\":4202:4208   */\n      dup4\n        /* \"#utility.yul\":4128:4209   */\n      tag_57\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":4118:4209   */\n      swap3\n      pop\n        /* \"#utility.yul\":3932:4219   */\n      pop\n        /* \"#utility.yul\":3919:3920   */\n      0x01\n        /* \"#utility.yul\":3916:3917   */\n      dup2\n        /* \"#utility.yul\":3912:3921   */\n      add\n        /* \"#utility.yul\":3907:3921   */\n      swap1\n      pop\n        /* \"#utility.yul\":3872:4219   */\n      jump(tag_98)\n    tag_100:\n        /* \"#utility.yul\":3876:3890   */\n      pop\n        /* \"#utility.yul\":4235:4238   */\n      dup6\n        /* \"#utility.yul\":4228:4238   */\n      swap4\n      pop\n        /* \"#utility.yul\":3520:4244   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3364:4244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4324:5022   */\n    tag_59:\n        /* \"#utility.yul\":4453:4456   */\n      0x00\n        /* \"#utility.yul\":4489:4493   */\n      0x40\n        /* \"#utility.yul\":4484:4487   */\n      dup4\n        /* \"#utility.yul\":4480:4494   */\n      add\n        /* \"#utility.yul\":4584:4588   */\n      0x00\n        /* \"#utility.yul\":4577:4582   */\n      dup4\n        /* \"#utility.yul\":4573:4589   */\n      add\n        /* \"#utility.yul\":4567:4590   */\n      mload\n        /* \"#utility.yul\":4603:4666   */\n      tag_104\n        /* \"#utility.yul\":4660:4664   */\n      0x00\n        /* \"#utility.yul\":4655:4658   */\n      dup7\n        /* \"#utility.yul\":4651:4665   */\n      add\n        /* \"#utility.yul\":4637:4649   */\n      dup3\n        /* \"#utility.yul\":4603:4666   */\n      tag_50\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":4504:4676   */\n      pop\n        /* \"#utility.yul\":4760:4764   */\n      0x20\n        /* \"#utility.yul\":4753:4758   */\n      dup4\n        /* \"#utility.yul\":4749:4765   */\n      add\n        /* \"#utility.yul\":4743:4766   */\n      mload\n        /* \"#utility.yul\":4813:4816   */\n      dup5\n        /* \"#utility.yul\":4807:4811   */\n      dup3\n        /* \"#utility.yul\":4803:4817   */\n      sub\n        /* \"#utility.yul\":4796:4800   */\n      0x20\n        /* \"#utility.yul\":4791:4794   */\n      dup7\n        /* \"#utility.yul\":4787:4801   */\n      add\n        /* \"#utility.yul\":4780:4818   */\n      mstore\n        /* \"#utility.yul\":4839:4984   */\n      tag_105\n        /* \"#utility.yul\":4979:4983   */\n      dup3\n        /* \"#utility.yul\":4965:4977   */\n      dup3\n        /* \"#utility.yul\":4839:4984   */\n      tag_58\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":4831:4984   */\n      swap2\n      pop\n        /* \"#utility.yul\":4686:4995   */\n      pop\n        /* \"#utility.yul\":5012:5016   */\n      dup1\n        /* \"#utility.yul\":5005:5016   */\n      swap2\n      pop\n        /* \"#utility.yul\":4458:5022   */\n      pop\n        /* \"#utility.yul\":4324:5022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5028:5421   */\n    tag_9:\n        /* \"#utility.yul\":5181:5185   */\n      0x00\n        /* \"#utility.yul\":5219:5221   */\n      0x20\n        /* \"#utility.yul\":5208:5217   */\n      dup3\n        /* \"#utility.yul\":5204:5222   */\n      add\n        /* \"#utility.yul\":5196:5222   */\n      swap1\n      pop\n        /* \"#utility.yul\":5268:5277   */\n      dup2\n        /* \"#utility.yul\":5262:5266   */\n      dup2\n        /* \"#utility.yul\":5258:5278   */\n      sub\n        /* \"#utility.yul\":5254:5255   */\n      0x00\n        /* \"#utility.yul\":5243:5252   */\n      dup4\n        /* \"#utility.yul\":5239:5256   */\n      add\n        /* \"#utility.yul\":5232:5279   */\n      mstore\n        /* \"#utility.yul\":5296:5414   */\n      tag_107\n        /* \"#utility.yul\":5409:5413   */\n      dup2\n        /* \"#utility.yul\":5400:5406   */\n      dup5\n        /* \"#utility.yul\":5296:5414   */\n      tag_59\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":5288:5414   */\n      swap1\n      pop\n        /* \"#utility.yul\":5028:5421   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5427:5607   */\n    tag_15:\n        /* \"#utility.yul\":5475:5552   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5472:5473   */\n      0x00\n        /* \"#utility.yul\":5465:5553   */\n      mstore\n        /* \"#utility.yul\":5572:5576   */\n      0x32\n        /* \"#utility.yul\":5569:5570   */\n      0x04\n        /* \"#utility.yul\":5562:5577   */\n      mstore\n        /* \"#utility.yul\":5596:5600   */\n      0x24\n        /* \"#utility.yul\":5593:5594   */\n      0x00\n        /* \"#utility.yul\":5586:5601   */\n      revert\n        /* \"#utility.yul\":5613:5793   */\n    tag_60:\n        /* \"#utility.yul\":5661:5738   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5658:5659   */\n      0x00\n        /* \"#utility.yul\":5651:5739   */\n      mstore\n        /* \"#utility.yul\":5758:5762   */\n      0x11\n        /* \"#utility.yul\":5755:5756   */\n      0x04\n        /* \"#utility.yul\":5748:5763   */\n      mstore\n        /* \"#utility.yul\":5782:5786   */\n      0x24\n        /* \"#utility.yul\":5779:5780   */\n      0x00\n        /* \"#utility.yul\":5772:5787   */\n      revert\n        /* \"#utility.yul\":5799:6104   */\n    tag_32:\n        /* \"#utility.yul\":5839:5842   */\n      0x00\n        /* \"#utility.yul\":5858:5878   */\n      tag_111\n        /* \"#utility.yul\":5876:5877   */\n      dup3\n        /* \"#utility.yul\":5858:5878   */\n      tag_49\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":5853:5878   */\n      swap2\n      pop\n        /* \"#utility.yul\":5892:5912   */\n      tag_112\n        /* \"#utility.yul\":5910:5911   */\n      dup4\n        /* \"#utility.yul\":5892:5912   */\n      tag_49\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":5887:5912   */\n      swap3\n      pop\n        /* \"#utility.yul\":6046:6047   */\n      dup3\n        /* \"#utility.yul\":5978:6044   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5974:6048   */\n      sub\n        /* \"#utility.yul\":5971:5972   */\n      dup3\n        /* \"#utility.yul\":5968:6049   */\n      gt\n        /* \"#utility.yul\":5965:6072   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":6052:6070   */\n      tag_114\n      tag_60\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":5965:6072   */\n    tag_113:\n        /* \"#utility.yul\":6096:6097   */\n      dup3\n        /* \"#utility.yul\":6093:6094   */\n      dup3\n        /* \"#utility.yul\":6089:6098   */\n      add\n        /* \"#utility.yul\":6082:6098   */\n      swap1\n      pop\n        /* \"#utility.yul\":5799:6104   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6110:6301   */\n    tag_36:\n        /* \"#utility.yul\":6150:6154   */\n      0x00\n        /* \"#utility.yul\":6170:6190   */\n      tag_116\n        /* \"#utility.yul\":6188:6189   */\n      dup3\n        /* \"#utility.yul\":6170:6190   */\n      tag_49\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":6165:6190   */\n      swap2\n      pop\n        /* \"#utility.yul\":6204:6224   */\n      tag_117\n        /* \"#utility.yul\":6222:6223   */\n      dup4\n        /* \"#utility.yul\":6204:6224   */\n      tag_49\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":6199:6224   */\n      swap3\n      pop\n        /* \"#utility.yul\":6243:6244   */\n      dup3\n        /* \"#utility.yul\":6240:6241   */\n      dup3\n        /* \"#utility.yul\":6237:6245   */\n      lt\n        /* \"#utility.yul\":6234:6268   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":6248:6266   */\n      tag_119\n      tag_60\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":6234:6268   */\n    tag_118:\n        /* \"#utility.yul\":6293:6294   */\n      dup3\n        /* \"#utility.yul\":6290:6291   */\n      dup3\n        /* \"#utility.yul\":6286:6295   */\n      sub\n        /* \"#utility.yul\":6278:6295   */\n      swap1\n      pop\n        /* \"#utility.yul\":6110:6301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6307:6487   */\n    tag_61:\n        /* \"#utility.yul\":6355:6432   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6352:6353   */\n      0x00\n        /* \"#utility.yul\":6345:6433   */\n      mstore\n        /* \"#utility.yul\":6452:6456   */\n      0x12\n        /* \"#utility.yul\":6449:6450   */\n      0x04\n        /* \"#utility.yul\":6442:6457   */\n      mstore\n        /* \"#utility.yul\":6476:6480   */\n      0x24\n        /* \"#utility.yul\":6473:6474   */\n      0x00\n        /* \"#utility.yul\":6466:6481   */\n      revert\n        /* \"#utility.yul\":6493:6678   */\n    tag_38:\n        /* \"#utility.yul\":6533:6534   */\n      0x00\n        /* \"#utility.yul\":6550:6570   */\n      tag_122\n        /* \"#utility.yul\":6568:6569   */\n      dup3\n        /* \"#utility.yul\":6550:6570   */\n      tag_49\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":6545:6570   */\n      swap2\n      pop\n        /* \"#utility.yul\":6584:6604   */\n      tag_123\n        /* \"#utility.yul\":6602:6603   */\n      dup4\n        /* \"#utility.yul\":6584:6604   */\n      tag_49\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":6579:6604   */\n      swap3\n      pop\n        /* \"#utility.yul\":6623:6624   */\n      dup3\n        /* \"#utility.yul\":6613:6648   */\n      tag_124\n      jumpi\n        /* \"#utility.yul\":6628:6646   */\n      tag_125\n      tag_61\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":6613:6648   */\n    tag_124:\n        /* \"#utility.yul\":6670:6671   */\n      dup3\n        /* \"#utility.yul\":6667:6668   */\n      dup3\n        /* \"#utility.yul\":6663:6672   */\n      div\n        /* \"#utility.yul\":6658:6672   */\n      swap1\n      pop\n        /* \"#utility.yul\":6493:6678   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6684:7032   */\n    tag_40:\n        /* \"#utility.yul\":6724:6731   */\n      0x00\n        /* \"#utility.yul\":6747:6767   */\n      tag_127\n        /* \"#utility.yul\":6765:6766   */\n      dup3\n        /* \"#utility.yul\":6747:6767   */\n      tag_49\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":6742:6767   */\n      swap2\n      pop\n        /* \"#utility.yul\":6781:6801   */\n      tag_128\n        /* \"#utility.yul\":6799:6800   */\n      dup4\n        /* \"#utility.yul\":6781:6801   */\n      tag_49\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":6776:6801   */\n      swap3\n      pop\n        /* \"#utility.yul\":6969:6970   */\n      dup2\n        /* \"#utility.yul\":6901:6967   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6897:6971   */\n      div\n        /* \"#utility.yul\":6894:6895   */\n      dup4\n        /* \"#utility.yul\":6891:6972   */\n      gt\n        /* \"#utility.yul\":6886:6887   */\n      dup3\n        /* \"#utility.yul\":6879:6888   */\n      iszero\n        /* \"#utility.yul\":6872:6889   */\n      iszero\n        /* \"#utility.yul\":6868:6973   */\n      and\n        /* \"#utility.yul\":6865:6996   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":6976:6994   */\n      tag_130\n      tag_60\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":6865:6996   */\n    tag_129:\n        /* \"#utility.yul\":7024:7025   */\n      dup3\n        /* \"#utility.yul\":7021:7022   */\n      dup3\n        /* \"#utility.yul\":7017:7026   */\n      mul\n        /* \"#utility.yul\":7006:7026   */\n      swap1\n      pop\n        /* \"#utility.yul\":6684:7032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ae1e42ed3af7b6d60dcda209f6f1a186ba6857967c3a5bc59adf78f34ec8b99364736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526305f5e10060025534801561001857600080fd5b506000600181600181540180825580915050039060005260206000209050506106bc806100466000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e73e14bf14610030575b600080fd5b61004a6004803603810190610045919061032c565b610060565b60405161005791906104c2565b60405180910390f35b6100686102af565b6000806040518060400160405280600081526020016000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815481106100d0576100cf6104e4565b5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b828210156101a757838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610101565b50505050815250905060005b8160200151518110156102585760006101e9836020015183815181106101dc576101db6104e4565b5b602002602001015161026d565b90508083602001518381518110610203576102026104e4565b5b602002602001015160600181815250508260200151828151811061022a576102296104e4565b5b602002602001015160200151846102419190610542565b9350506001816102519190610542565b90506101b3565b50818160000181815250508092505050919050565b60006002548260200151610e1084604001514261028a9190610598565b61029491906105fb565b61029e919061062c565b6102a891906105fb565b9050919050565b604051806040016040528060008152602001606081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f9826102ce565b9050919050565b610309816102ee565b811461031457600080fd5b50565b60008135905061032681610300565b92915050565b600060208284031215610342576103416102c9565b5b600061035084828501610317565b91505092915050565b6000819050919050565b61036c81610359565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6103a7816102ee565b82525050565b6080820160008201516103c3600085018261039e565b5060208201516103d66020850182610363565b5060408201516103e96040850182610363565b5060608201516103fc6060850182610363565b50505050565b600061040e83836103ad565b60808301905092915050565b6000602082019050919050565b600061043282610372565b61043c818561037d565b93506104478361038e565b8060005b8381101561047857815161045f8882610402565b975061046a8361041a565b92505060018101905061044b565b5085935050505092915050565b600060408301600083015161049d6000860182610363565b50602083015184820360208601526104b58282610427565b9150508091505092915050565b600060208201905081810360008301526104dc8184610485565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061054d82610359565b915061055883610359565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561058d5761058c610513565b5b828201905092915050565b60006105a382610359565b91506105ae83610359565b9250828210156105c1576105c0610513565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061060682610359565b915061061183610359565b925082610621576106206105cc565b5b828204905092915050565b600061063782610359565b915061064283610359565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561067b5761067a610513565b5b82820290509291505056fea2646970667358221220ae1e42ed3af7b6d60dcda209f6f1a186ba6857967c3a5bc59adf78f34ec8b99364736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x5F5E100 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP POP PUSH2 0x6BC DUP1 PUSH2 0x46 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE73E14BF EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x68 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xD0 JUMPI PUSH2 0xCF PUSH2 0x4E4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1A7 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x101 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 PUSH2 0x1E9 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1DC JUMPI PUSH2 0x1DB PUSH2 0x4E4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x26D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x203 JUMPI PUSH2 0x202 PUSH2 0x4E4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x22A JUMPI PUSH2 0x229 PUSH2 0x4E4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP5 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x542 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x1 DUP2 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x542 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B3 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0xE10 DUP5 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x62C JUMP JUMPDEST PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F9 DUP3 PUSH2 0x2CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x309 DUP2 PUSH2 0x2EE JUMP JUMPDEST DUP2 EQ PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x326 DUP2 PUSH2 0x300 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x342 JUMPI PUSH2 0x341 PUSH2 0x2C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x350 DUP5 DUP3 DUP6 ADD PUSH2 0x317 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36C DUP2 PUSH2 0x359 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A7 DUP2 PUSH2 0x2EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3C3 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x39E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3D6 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x363 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3E9 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x363 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3FC PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x363 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40E DUP4 DUP4 PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x432 DUP3 PUSH2 0x372 JUMP JUMPDEST PUSH2 0x43C DUP2 DUP6 PUSH2 0x37D JUMP JUMPDEST SWAP4 POP PUSH2 0x447 DUP4 PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x478 JUMPI DUP2 MLOAD PUSH2 0x45F DUP9 DUP3 PUSH2 0x402 JUMP JUMPDEST SWAP8 POP PUSH2 0x46A DUP4 PUSH2 0x41A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x44B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x49D PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x363 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x4B5 DUP3 DUP3 PUSH2 0x427 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DC DUP2 DUP5 PUSH2 0x485 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x54D DUP3 PUSH2 0x359 JUMP JUMPDEST SWAP2 POP PUSH2 0x558 DUP4 PUSH2 0x359 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x58D JUMPI PUSH2 0x58C PUSH2 0x513 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A3 DUP3 PUSH2 0x359 JUMP JUMPDEST SWAP2 POP PUSH2 0x5AE DUP4 PUSH2 0x359 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x5C1 JUMPI PUSH2 0x5C0 PUSH2 0x513 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x606 DUP3 PUSH2 0x359 JUMP JUMPDEST SWAP2 POP PUSH2 0x611 DUP4 PUSH2 0x359 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x621 JUMPI PUSH2 0x620 PUSH2 0x5CC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x637 DUP3 PUSH2 0x359 JUMP JUMPDEST SWAP2 POP PUSH2 0x642 DUP4 PUSH2 0x359 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x67B JUMPI PUSH2 0x67A PUSH2 0x513 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x1E TIMESTAMP 0xED GASPRICE 0xF7 0xB6 0xD6 0xD 0xCD LOG2 MULMOD 0xF6 CALL LOG1 DUP7 0xBA PUSH9 0x57967C3A5BC59ADF78 RETURN 0x4E 0xC8 0xB9 SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "176:7554:0:-:0;;;2222:9;2189:42;;365:124;;;;;;;;;;463:12;:19;;;;;;;;;;;;;;;;;;;;;;;176:7554;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@calculateStakeReward_182": {
									"entryPoint": 621,
									"id": 182,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasStake_351": {
									"entryPoint": 96,
									"id": 351,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr": {
									"entryPoint": 1026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_StakingSummary_$35_memory_ptr_to_t_struct$_StakingSummary_$35_memory_ptr_fromStack": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_struct$_StakingSummary_$35_memory_ptr__to_t_struct$_StakingSummary_$35_memory_ptr__fromStack_reversed": {
									"entryPoint": 1218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1484,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1252,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 713,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7035:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:1",
														"type": ""
													}
												],
												"src": "1176:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1314:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1331:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1354:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1336:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1336:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1324:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1324:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1324:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1302:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1309:3:1",
														"type": ""
													}
												],
												"src": "1259:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1468:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1479:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1495:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1489:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1489:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1479:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1451:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1461:6:1",
														"type": ""
													}
												],
												"src": "1373:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1636:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1653:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1658:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1646:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1646:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1646:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1674:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1698:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1689:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1689:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1674:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1608:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1613:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1624:11:1",
														"type": ""
													}
												],
												"src": "1514:195:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "1826:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1839:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1851:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1856:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1847:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1847:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1839:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1795:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1803:4:1",
														"type": ""
													}
												],
												"src": "1715:153:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1929:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1946:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1969:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1951:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1951:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1939:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1939:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1917:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1924:3:1",
														"type": ""
													}
												],
												"src": "1874:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2142:747:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2152:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2168:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2173:4:1",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2164:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2164:14:1"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "2156:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2188:164:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2223:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2253:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2260:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2249:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2249:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2243:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2243:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2227:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2313:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2331:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2336:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2327:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2327:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2279:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2279:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2279:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2362:166:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2399:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2429:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2436:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2425:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2425:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2419:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2419:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2403:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2489:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2507:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2512:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2503:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2503:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2455:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2455:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2455:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2538:165:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2574:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2604:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2611:4:1",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2600:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2600:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2594:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2594:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2578:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2664:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2682:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2687:4:1",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2678:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2678:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2630:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2630:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2630:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2713:169:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2753:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2783:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2790:4:1",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2779:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2779:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2773:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2773:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "2757:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "2843:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2861:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2866:4:1",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2857:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2809:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2809:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2809:63:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2129:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2136:3:1",
														"type": ""
													}
												],
												"src": "2044:845:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3017:141:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3103:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3111:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3027:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3027:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3027:88:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3124:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3142:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3147:4:1",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3138:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3138:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "3124:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2990:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2998:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "3006:10:1",
														"type": ""
													}
												],
												"src": "2895:263:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3260:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3270:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3282:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3287:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3278:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "3270:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "3247:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "3255:4:1",
														"type": ""
													}
												],
												"src": "3164:134:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3520:724:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3530:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3613:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3544:68:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3544:75:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3534:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3628:104:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3720:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3725:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3635:84:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3635:97:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3628:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3741:92:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3827:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3756:70:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3756:77:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "3745:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3842:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "3856:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3846:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3932:287:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3946:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3973:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "3967:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3967:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "3950:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3993:112:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4086:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4101:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4000:85:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4000:105:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3993:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4118:91:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4202:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4128:73:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4128:81:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4118:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3894:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3897:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3891:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3891:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3905:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3907:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3916:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3919:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3912:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3912:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3907:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3876:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3878:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3887:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "3882:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3872:347:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4228:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4235:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4228:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3515:3:1",
														"type": ""
													}
												],
												"src": "3364:880:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4458:564:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4468:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4484:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4489:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4480:14:1"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "4472:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4504:172:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4547:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4577:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4584:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4573:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4573:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4567:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4567:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4551:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4637:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4655:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4660:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4651:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4651:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4603:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4603:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4603:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4686:309:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4723:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4753:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4760:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4749:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4749:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4743:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4743:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "4727:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4791:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4796:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4787:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4787:14:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nodeType": "YulIdentifier",
																						"src": "4807:4:1"
																					},
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4813:3:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4803:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4803:14:1"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4780:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4780:38:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4780:38:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4831:153:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "4965:12:1"
																			},
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4979:4:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4839:125:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4839:145:1"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nodeType": "YulIdentifier",
																			"src": "4831:4:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5005:11:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "5012:4:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5005:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_StakingSummary_$35_memory_ptr_to_t_struct$_StakingSummary_$35_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4437:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4444:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4453:3:1",
														"type": ""
													}
												],
												"src": "4324:698:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5186:235:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5196:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5208:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5219:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5204:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5196:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5243:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5254:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5239:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5262:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5268:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5232:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5232:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5288:126:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5400:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5409:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_StakingSummary_$35_memory_ptr_to_t_struct$_StakingSummary_$35_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5296:103:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5296:118:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5288:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_StakingSummary_$35_memory_ptr__to_t_struct$_StakingSummary_$35_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5158:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5170:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5181:4:1",
														"type": ""
													}
												],
												"src": "5028:393:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5455:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5472:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5475:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5465:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5465:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5465:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5569:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5572:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5562:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5562:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5593:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5596:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5427:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5641:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5658:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5661:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5651:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5651:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5651:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5755:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5758:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5748:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5748:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5748:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5779:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5782:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5772:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5772:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5772:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5613:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5843:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5853:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5876:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5858:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5858:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5853:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5887:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5910:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5892:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5892:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5887:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6050:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6052:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6052:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6052:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5971:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5978:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6046:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5974:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5968:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5968:81:1"
															},
															"nodeType": "YulIf",
															"src": "5965:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6082:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6093:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6096:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6089:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6089:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6082:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5830:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5833:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5839:3:1",
														"type": ""
													}
												],
												"src": "5799:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6155:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6165:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6188:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6170:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6170:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6165:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6199:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6222:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6204:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6204:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6199:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6246:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6248:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6248:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6248:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6240:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6243:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6237:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6237:8:1"
															},
															"nodeType": "YulIf",
															"src": "6234:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6278:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6290:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6293:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6286:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6286:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6278:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6141:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6144:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6150:4:1",
														"type": ""
													}
												],
												"src": "6110:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6335:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6352:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6355:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6345:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6345:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6345:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6449:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6452:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6442:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6442:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6442:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6473:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6476:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6466:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6466:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6307:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6535:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6545:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6568:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6550:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6550:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6545:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6579:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6602:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6584:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6584:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6579:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6626:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "6628:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6628:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6628:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6623:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6616:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6616:9:1"
															},
															"nodeType": "YulIf",
															"src": "6613:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6658:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6667:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6670:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6663:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6663:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6658:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6524:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6527:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6533:1:1",
														"type": ""
													}
												],
												"src": "6493:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6732:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6742:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6765:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6747:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6747:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6742:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6776:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6799:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6781:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6781:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6776:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6974:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6976:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6976:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6976:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6886:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6879:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6879:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6872:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6872:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6894:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6901:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6969:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6897:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6897:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6891:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6891:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6868:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6868:105:1"
															},
															"nodeType": "YulIf",
															"src": "6865:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7006:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7021:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7024:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7017:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7017:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7006:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6715:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6718:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6724:7:1",
														"type": ""
													}
												],
												"src": "6684:348:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct Stakeable.Stake -> struct Stakeable.Stake\n    function abi_encode_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // since\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // claimable\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x80)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Stakeable.Stake[] -> struct Stakeable.Stake[]\n    function abi_encode_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Stake_$21_memory_ptr_to_t_struct$_Stake_$21_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct Stakeable.StakingSummary -> struct Stakeable.StakingSummary\n    function abi_encode_t_struct$_StakingSummary_$35_memory_ptr_to_t_struct$_StakingSummary_$35_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // total_amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // stakes\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_StakingSummary_$35_memory_ptr__to_t_struct$_StakingSummary_$35_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_StakingSummary_$35_memory_ptr_to_t_struct$_StakingSummary_$35_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e73e14bf14610030575b600080fd5b61004a6004803603810190610045919061032c565b610060565b60405161005791906104c2565b60405180910390f35b6100686102af565b6000806040518060400160405280600081526020016000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815481106100d0576100cf6104e4565b5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b828210156101a757838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610101565b50505050815250905060005b8160200151518110156102585760006101e9836020015183815181106101dc576101db6104e4565b5b602002602001015161026d565b90508083602001518381518110610203576102026104e4565b5b602002602001015160600181815250508260200151828151811061022a576102296104e4565b5b602002602001015160200151846102419190610542565b9350506001816102519190610542565b90506101b3565b50818160000181815250508092505050919050565b60006002548260200151610e1084604001514261028a9190610598565b61029491906105fb565b61029e919061062c565b6102a891906105fb565b9050919050565b604051806040016040528060008152602001606081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f9826102ce565b9050919050565b610309816102ee565b811461031457600080fd5b50565b60008135905061032681610300565b92915050565b600060208284031215610342576103416102c9565b5b600061035084828501610317565b91505092915050565b6000819050919050565b61036c81610359565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6103a7816102ee565b82525050565b6080820160008201516103c3600085018261039e565b5060208201516103d66020850182610363565b5060408201516103e96040850182610363565b5060608201516103fc6060850182610363565b50505050565b600061040e83836103ad565b60808301905092915050565b6000602082019050919050565b600061043282610372565b61043c818561037d565b93506104478361038e565b8060005b8381101561047857815161045f8882610402565b975061046a8361041a565b92505060018101905061044b565b5085935050505092915050565b600060408301600083015161049d6000860182610363565b50602083015184820360208601526104b58282610427565b9150508091505092915050565b600060208201905081810360008301526104dc8184610485565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061054d82610359565b915061055883610359565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561058d5761058c610513565b5b828201905092915050565b60006105a382610359565b91506105ae83610359565b9250828210156105c1576105c0610513565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061060682610359565b915061061183610359565b925082610621576106206105cc565b5b828204905092915050565b600061063782610359565b915061064283610359565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561067b5761067a610513565b5b82820290509291505056fea2646970667358221220ae1e42ed3af7b6d60dcda209f6f1a186ba6857967c3a5bc59adf78f34ec8b99364736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE73E14BF EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x68 PUSH2 0x2AF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0xD0 JUMPI PUSH2 0xCF PUSH2 0x4E4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1A7 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x101 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 PUSH2 0x1E9 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1DC JUMPI PUSH2 0x1DB PUSH2 0x4E4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x26D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x20 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x203 JUMPI PUSH2 0x202 PUSH2 0x4E4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP DUP3 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x22A JUMPI PUSH2 0x229 PUSH2 0x4E4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP5 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x542 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x1 DUP2 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x542 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B3 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0xE10 DUP5 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x62C JUMP JUMPDEST PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x5FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F9 DUP3 PUSH2 0x2CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x309 DUP2 PUSH2 0x2EE JUMP JUMPDEST DUP2 EQ PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x326 DUP2 PUSH2 0x300 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x342 JUMPI PUSH2 0x341 PUSH2 0x2C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x350 DUP5 DUP3 DUP6 ADD PUSH2 0x317 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36C DUP2 PUSH2 0x359 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A7 DUP2 PUSH2 0x2EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3C3 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x39E JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3D6 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x363 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3E9 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x363 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3FC PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x363 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40E DUP4 DUP4 PUSH2 0x3AD JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x432 DUP3 PUSH2 0x372 JUMP JUMPDEST PUSH2 0x43C DUP2 DUP6 PUSH2 0x37D JUMP JUMPDEST SWAP4 POP PUSH2 0x447 DUP4 PUSH2 0x38E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x478 JUMPI DUP2 MLOAD PUSH2 0x45F DUP9 DUP3 PUSH2 0x402 JUMP JUMPDEST SWAP8 POP PUSH2 0x46A DUP4 PUSH2 0x41A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x44B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x49D PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x363 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x4B5 DUP3 DUP3 PUSH2 0x427 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DC DUP2 DUP5 PUSH2 0x485 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x54D DUP3 PUSH2 0x359 JUMP JUMPDEST SWAP2 POP PUSH2 0x558 DUP4 PUSH2 0x359 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x58D JUMPI PUSH2 0x58C PUSH2 0x513 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A3 DUP3 PUSH2 0x359 JUMP JUMPDEST SWAP2 POP PUSH2 0x5AE DUP4 PUSH2 0x359 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x5C1 JUMPI PUSH2 0x5C0 PUSH2 0x513 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x606 DUP3 PUSH2 0x359 JUMP JUMPDEST SWAP2 POP PUSH2 0x611 DUP4 PUSH2 0x359 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x621 JUMPI PUSH2 0x620 PUSH2 0x5CC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x637 DUP3 PUSH2 0x359 JUMP JUMPDEST SWAP2 POP PUSH2 0x642 DUP4 PUSH2 0x359 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x67B JUMPI PUSH2 0x67A PUSH2 0x513 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x1E TIMESTAMP 0xED GASPRICE 0xF7 0xB6 0xD6 0xD 0xCD LOG2 MULMOD 0xF6 CALL LOG1 DUP7 0xBA PUSH9 0x57967C3A5BC59ADF78 RETURN 0x4E 0xC8 0xB9 SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "176:7554:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6899:828;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;6954:21;;:::i;:::-;7066:24;7169:29;7201:63;;;;;;;;7216:1;7201:63;;;;7219:12;7232:6;:15;7239:7;7232:15;;;;;;;;;;;;;;;;7219:29;;;;;;;;:::i;:::-;;;;;;;;;;;;:44;;7201:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7169:95;;7336:9;7331:273;7355:7;:14;;;:21;7351:1;:25;7331:273;;;7398:23;7424:39;7445:7;:14;;;7460:1;7445:17;;;;;;;;:::i;:::-;;;;;;;;7424:20;:39::i;:::-;7398:65;;7506:15;7476:7;:14;;;7491:1;7476:17;;;;;;;;:::i;:::-;;;;;;;;:27;;:45;;;;;7570:7;:14;;;7585:1;7570:17;;;;;;;;:::i;:::-;;;;;;;;:24;;;7553:16;:41;;;;:::i;:::-;7534:60;;7385:219;7383:1;7378:6;;;;;:::i;:::-;;;7331:273;;;;7680:16;7657:7;:20;;:39;;;;;7713:7;7706:14;;;;6899:828;;;:::o;4426:804::-;4507:7;5208:13;;5183:14;:21;;;5172:7;5148:14;:20;;;5130:15;:38;;;;:::i;:::-;5129:50;;;;:::i;:::-;5128:76;;;;:::i;:::-;5127:94;;;;:::i;:::-;5120:101;;4426:804;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:108::-;1336:24;1354:5;1336:24;:::i;:::-;1331:3;1324:37;1259:108;;:::o;1373:135::-;1461:6;1495:5;1489:12;1479:22;;1373:135;;;:::o;1514:195::-;1624:11;1658:6;1653:3;1646:19;1698:4;1693:3;1689:14;1674:29;;1514:195;;;;:::o;1715:153::-;1803:4;1826:3;1818:11;;1856:4;1851:3;1847:14;1839:22;;1715:153;;;:::o;1874:108::-;1951:24;1969:5;1951:24;:::i;:::-;1946:3;1939:37;1874:108;;:::o;2044:845::-;2173:4;2168:3;2164:14;2260:4;2253:5;2249:16;2243:23;2279:63;2336:4;2331:3;2327:14;2313:12;2279:63;:::i;:::-;2188:164;2436:4;2429:5;2425:16;2419:23;2455:63;2512:4;2507:3;2503:14;2489:12;2455:63;:::i;:::-;2362:166;2611:4;2604:5;2600:16;2594:23;2630:63;2687:4;2682:3;2678:14;2664:12;2630:63;:::i;:::-;2538:165;2790:4;2783:5;2779:16;2773:23;2809:63;2866:4;2861:3;2857:14;2843:12;2809:63;:::i;:::-;2713:169;2142:747;2044:845;;:::o;2895:263::-;3006:10;3027:88;3111:3;3103:6;3027:88;:::i;:::-;3147:4;3142:3;3138:14;3124:28;;2895:263;;;;:::o;3164:134::-;3255:4;3287;3282:3;3278:14;3270:22;;3164:134;;;:::o;3364:880::-;3515:3;3544:75;3613:5;3544:75;:::i;:::-;3635:97;3725:6;3720:3;3635:97;:::i;:::-;3628:104;;3756:77;3827:5;3756:77;:::i;:::-;3856:7;3887:1;3872:347;3897:6;3894:1;3891:13;3872:347;;;3973:6;3967:13;4000:105;4101:3;4086:13;4000:105;:::i;:::-;3993:112;;4128:81;4202:6;4128:81;:::i;:::-;4118:91;;3932:287;3919:1;3916;3912:9;3907:14;;3872:347;;;3876:14;4235:3;4228:10;;3520:724;;;3364:880;;;;:::o;4324:698::-;4453:3;4489:4;4484:3;4480:14;4584:4;4577:5;4573:16;4567:23;4603:63;4660:4;4655:3;4651:14;4637:12;4603:63;:::i;:::-;4504:172;4760:4;4753:5;4749:16;4743:23;4813:3;4807:4;4803:14;4796:4;4791:3;4787:14;4780:38;4839:145;4979:4;4965:12;4839:145;:::i;:::-;4831:153;;4686:309;5012:4;5005:11;;4458:564;4324:698;;;;:::o;5028:393::-;5181:4;5219:2;5208:9;5204:18;5196:26;;5268:9;5262:4;5258:20;5254:1;5243:9;5239:17;5232:47;5296:118;5409:4;5400:6;5296:118;:::i;:::-;5288:126;;5028:393;;;;:::o;5427:180::-;5475:77;5472:1;5465:88;5572:4;5569:1;5562:15;5596:4;5593:1;5586:15;5613:180;5661:77;5658:1;5651:88;5758:4;5755:1;5748:15;5782:4;5779:1;5772:15;5799:305;5839:3;5858:20;5876:1;5858:20;:::i;:::-;5853:25;;5892:20;5910:1;5892:20;:::i;:::-;5887:25;;6046:1;5978:66;5974:74;5971:1;5968:81;5965:107;;;6052:18;;:::i;:::-;5965:107;6096:1;6093;6089:9;6082:16;;5799:305;;;;:::o;6110:191::-;6150:4;6170:20;6188:1;6170:20;:::i;:::-;6165:25;;6204:20;6222:1;6204:20;:::i;:::-;6199:25;;6243:1;6240;6237:8;6234:34;;;6248:18;;:::i;:::-;6234:34;6293:1;6290;6286:9;6278:17;;6110:191;;;;:::o;6307:180::-;6355:77;6352:1;6345:88;6452:4;6449:1;6442:15;6476:4;6473:1;6466:15;6493:185;6533:1;6550:20;6568:1;6550:20;:::i;:::-;6545:25;;6584:20;6602:1;6584:20;:::i;:::-;6579:25;;6623:1;6613:35;;6628:18;;:::i;:::-;6613:35;6670:1;6667;6663:9;6658:14;;6493:185;;;;:::o;6684:348::-;6724:7;6747:20;6765:1;6747:20;:::i;:::-;6742:25;;6781:20;6799:1;6781:20;:::i;:::-;6776:25;;6969:1;6901:66;6897:74;6894:1;6891:81;6886:1;6879:9;6872:17;6868:105;6865:131;;;6976:18;;:::i;:::-;6865:131;7024:1;7021;7017:9;7006:20;;6684:348;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "344800",
								"executionCost": "46781",
								"totalCost": "391581"
							},
							"external": {
								"hasStake(address)": "infinite"
							},
							"internal": {
								"_addStakeholder(address)": "infinite",
								"_stake(uint256)": "infinite",
								"_withdrawStake(uint256,uint256)": "infinite",
								"calculateStakeReward(struct Stakeable.Stake memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 176,
									"end": 7730,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 176,
									"end": 7730,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 176,
									"end": 7730,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2222,
									"end": 2231,
									"name": "PUSH",
									"source": 0,
									"value": "5F5E100"
								},
								{
									"begin": 2189,
									"end": 2231,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2189,
									"end": 2231,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 365,
									"end": 489,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 365,
									"end": 489,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 365,
									"end": 489,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 365,
									"end": 489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 365,
									"end": 489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 365,
									"end": 489,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 489,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 365,
									"end": 489,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 365,
									"end": 489,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 365,
									"end": 489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 365,
									"end": 489,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 463,
									"end": 475,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 482,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 463,
									"end": 482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 463,
									"end": 482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 463,
									"end": 482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 482,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 463,
									"end": 482,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 176,
									"end": 7730,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 7730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 176,
									"end": 7730,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 176,
									"end": 7730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 7730,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 176,
									"end": 7730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 7730,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ae1e42ed3af7b6d60dcda209f6f1a186ba6857967c3a5bc59adf78f34ec8b99364736f6c634300080f0033",
									".code": [
										{
											"begin": 176,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "E73E14BF"
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 176,
											"end": 7730,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6899,
											"end": 7727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6899,
											"end": 7727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6899,
											"end": 7727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6954,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6954,
											"end": 6975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6975,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6954,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7066,
											"end": 7090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7169,
											"end": 7198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7216,
											"end": 7217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7232,
											"end": 7238,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7239,
											"end": 7246,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7219,
											"end": 7248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7263,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7219,
											"end": 7263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7201,
											"end": 7264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7169,
											"end": 7264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7169,
											"end": 7264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7331,
											"end": 7604,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7331,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7355,
											"end": 7362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7355,
											"end": 7369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7355,
											"end": 7369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7355,
											"end": 7369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7355,
											"end": 7376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7351,
											"end": 7352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7351,
											"end": 7376,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7331,
											"end": 7604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7331,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7331,
											"end": 7604,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7424,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7445,
											"end": 7452,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7445,
											"end": 7459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7460,
											"end": 7461,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7445,
											"end": 7462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7424,
											"end": 7463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7463,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7424,
											"end": 7463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7506,
											"end": 7521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7476,
											"end": 7490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7491,
											"end": 7492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7476,
											"end": 7493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7503,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7476,
											"end": 7503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7577,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7570,
											"end": 7584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7585,
											"end": 7586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7570,
											"end": 7587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7570,
											"end": 7594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7569,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7553,
											"end": 7594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7553,
											"end": 7594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7553,
											"end": 7594,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7553,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7594,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7534,
											"end": 7594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7385,
											"end": 7604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7384,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7378,
											"end": 7384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7331,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7331,
											"end": 7604,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7331,
											"end": 7604,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7331,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7331,
											"end": 7604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7680,
											"end": 7696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7657,
											"end": 7677,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7713,
											"end": 7720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7720,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6899,
											"end": 7727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 5230,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4426,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4507,
											"end": 4514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5221,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5208,
											"end": 5221,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5183,
											"end": 5197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5183,
											"end": 5204,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5183,
											"end": 5204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5183,
											"end": 5204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 5148,
											"end": 5162,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5148,
											"end": 5168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5145,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5130,
											"end": 5168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5130,
											"end": 5168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5168,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5130,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5129,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5129,
											"end": 5179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5129,
											"end": 5179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5129,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5129,
											"end": 5179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5129,
											"end": 5179,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5129,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5128,
											"end": 5204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5128,
											"end": 5204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5204,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5128,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5127,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5127,
											"end": 5221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5127,
											"end": 5221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5127,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5127,
											"end": 5221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5127,
											"end": 5221,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5127,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 5230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 5230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 5230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 5230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1367,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1259,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1354,
											"end": 1359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1336,
											"end": 1360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1360,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1336,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1508,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1373,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1501,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1709,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1514,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1709,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1709,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1715,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1982,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1874,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1969,
											"end": 1974,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1951,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1975,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1951,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1949,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2044,
											"end": 2889,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2044,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2177,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2168,
											"end": 2171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2253,
											"end": 2258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2243,
											"end": 2266,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2336,
											"end": 2340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2331,
											"end": 2334,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2327,
											"end": 2341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2325,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2279,
											"end": 2342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2342,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2279,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2440,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2429,
											"end": 2434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2442,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2512,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2510,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2455,
											"end": 2518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2518,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2455,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2615,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2604,
											"end": 2609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2617,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2630,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2685,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 2692,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2676,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2630,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2630,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2630,
											"end": 2693,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2630,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2794,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2783,
											"end": 2788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2796,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2866,
											"end": 2870,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2861,
											"end": 2864,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2809,
											"end": 2872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2872,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2809,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2044,
											"end": 2889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2044,
											"end": 2889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2044,
											"end": 2889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3158,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2895,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3111,
											"end": 3114,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3027,
											"end": 3115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3115,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3027,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3147,
											"end": 3151,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3142,
											"end": 3145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3158,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3298,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3164,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3291,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3278,
											"end": 3292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 4244,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3364,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3518,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3544,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3613,
											"end": 3618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3544,
											"end": 3619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3619,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3544,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3725,
											"end": 3731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3723,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3635,
											"end": 3732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3732,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3635,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3732,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3827,
											"end": 3832,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3756,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3756,
											"end": 3833,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3756,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3856,
											"end": 3863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3888,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 4219,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3872,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3897,
											"end": 3903,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3904,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 4219,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3872,
											"end": 4219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 3980,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4101,
											"end": 4104,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4086,
											"end": 4099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4000,
											"end": 4105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4105,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4000,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4105,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4202,
											"end": 4208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4128,
											"end": 4209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4209,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4128,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4209,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 4219,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3920,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3916,
											"end": 3917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3872,
											"end": 4219,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 4219,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3872,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3876,
											"end": 3890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4235,
											"end": 4238,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4228,
											"end": 4238,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4228,
											"end": 4238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 4244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 4244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 4244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 4244,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 4244,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 4244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 4244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 4244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 5022,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4324,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4453,
											"end": 4456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4489,
											"end": 4493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4484,
											"end": 4487,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4480,
											"end": 4494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4584,
											"end": 4588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4577,
											"end": 4582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4573,
											"end": 4589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4590,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4660,
											"end": 4664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4658,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4637,
											"end": 4649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4603,
											"end": 4666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4666,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4603,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4760,
											"end": 4764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4753,
											"end": 4758,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4816,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 4811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4817,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4796,
											"end": 4800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4791,
											"end": 4794,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4801,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4780,
											"end": 4818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4979,
											"end": 4983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 4977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4839,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4984,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4839,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4831,
											"end": 4984,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4831,
											"end": 4984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5012,
											"end": 5016,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5016,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 5022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 5022,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 5022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 5022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 5022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 5022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5421,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5028,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5268,
											"end": 5277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5262,
											"end": 5266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5258,
											"end": 5278,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5243,
											"end": 5252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5232,
											"end": 5279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5296,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5409,
											"end": 5413,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5406,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5296,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5296,
											"end": 5414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5296,
											"end": 5414,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5296,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5421,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5427,
											"end": 5607,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 5427,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5552,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5472,
											"end": 5473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5465,
											"end": 5553,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5572,
											"end": 5576,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5569,
											"end": 5570,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5562,
											"end": 5577,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 5600,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5593,
											"end": 5594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5586,
											"end": 5601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5613,
											"end": 5793,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5613,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5738,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5651,
											"end": 5739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5762,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5748,
											"end": 5763,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5782,
											"end": 5786,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5779,
											"end": 5780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5772,
											"end": 5787,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 6104,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5799,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5839,
											"end": 5842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5858,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5876,
											"end": 5877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5858,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5858,
											"end": 5878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5858,
											"end": 5878,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5858,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5853,
											"end": 5878,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5853,
											"end": 5878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5910,
											"end": 5911,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5892,
											"end": 5912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5912,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5892,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 5912,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 5912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5978,
											"end": 6044,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5974,
											"end": 6048,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5971,
											"end": 5972,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6049,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5965,
											"end": 6072,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5965,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5965,
											"end": 6072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6052,
											"end": 6070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5965,
											"end": 6072,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 5965,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6096,
											"end": 6097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6082,
											"end": 6098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 6104,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 6104,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 6104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 6104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 6104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6301,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 6110,
											"end": 6301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6150,
											"end": 6154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6170,
											"end": 6190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6188,
											"end": 6189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6170,
											"end": 6190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6170,
											"end": 6190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6170,
											"end": 6190,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6170,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6222,
											"end": 6223,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6204,
											"end": 6224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6224,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6204,
											"end": 6224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6224,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6243,
											"end": 6244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6245,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6268,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6234,
											"end": 6268,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6248,
											"end": 6266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6268,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6234,
											"end": 6268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6286,
											"end": 6295,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6278,
											"end": 6295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6278,
											"end": 6295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6301,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6301,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6487,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6307,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6355,
											"end": 6432,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6352,
											"end": 6353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6345,
											"end": 6433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6452,
											"end": 6456,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6449,
											"end": 6450,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6442,
											"end": 6457,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6480,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6473,
											"end": 6474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6481,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6678,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 6493,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6550,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6568,
											"end": 6569,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6550,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6550,
											"end": 6570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6550,
											"end": 6570,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6550,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6545,
											"end": 6570,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6545,
											"end": 6570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6584,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6602,
											"end": 6603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6584,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6584,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6584,
											"end": 6604,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6584,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6613,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 6613,
											"end": 6648,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6628,
											"end": 6646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6613,
											"end": 6648,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 6613,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6670,
											"end": 6671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6667,
											"end": 6668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6663,
											"end": 6672,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6658,
											"end": 6672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6658,
											"end": 6672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6678,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 7032,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6724,
											"end": 6731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6765,
											"end": 6766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6747,
											"end": 6767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6742,
											"end": 6767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6742,
											"end": 6767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6781,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6799,
											"end": 6800,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6781,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6781,
											"end": 6801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6781,
											"end": 6801,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6781,
											"end": 6801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6776,
											"end": 6801,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6776,
											"end": 6801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6901,
											"end": 6967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6897,
											"end": 6971,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6894,
											"end": 6895,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6891,
											"end": 6972,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6879,
											"end": 6888,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6889,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6868,
											"end": 6973,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6865,
											"end": 6996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6865,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6865,
											"end": 6996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6976,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6976,
											"end": 6994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6994,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6976,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6865,
											"end": 6996,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6865,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 7025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7022,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7017,
											"end": 7026,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 7032,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 7032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 7032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 7032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 7032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Stakeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"hasStake(address)": "e73e14bf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"hasStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"}],\"internalType\":\"struct Stakeable.Stake[]\",\"name\":\"stakes\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Stakeable.StakingSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Staked(address,uint256,uint256,uint256)\":{\"notice\":\"Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor since this contract is not ment to be used without inheritance push once to stakeholders for it to work proplerly\"},\"hasStake(address)\":{\"notice\":\"hasStake is used to check if a account has stakes and the total amount along with all the seperate stakes\"}},\"notice\":\"Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Stakeable.sol\":\"Stakeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Stakeable.sol\":{\"keccak256\":\"0xd516ed8bf396fba00e7b8035dea1c1a6583b7885edfacaf83a7f7f178fef6ae2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a03b93b429d2498e584879da514bfddfabb925afcfc1e7a153517190006f12cf\",\"dweb:/ipfs/QmV9bWHx22FCNu5kiKap1cT9ZvZfogsKATYCeyLrkcXorc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 40,
								"contract": "contracts/Stakeable.sol:Stakeable",
								"label": "stakeholders",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(Stakeholder)28_storage)dyn_storage"
							},
							{
								"astId": 45,
								"contract": "contracts/Stakeable.sol:Stakeable",
								"label": "stakes",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 60,
								"contract": "contracts/Stakeable.sol:Stakeable",
								"label": "rewardPerHour",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Stake)21_storage)dyn_storage": {
								"base": "t_struct(Stake)21_storage",
								"encoding": "dynamic_array",
								"label": "struct Stakeable.Stake[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Stakeholder)28_storage)dyn_storage": {
								"base": "t_struct(Stakeholder)28_storage",
								"encoding": "dynamic_array",
								"label": "struct Stakeable.Stakeholder[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)21_storage": {
								"encoding": "inplace",
								"label": "struct Stakeable.Stake",
								"members": [
									{
										"astId": 14,
										"contract": "contracts/Stakeable.sol:Stakeable",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 16,
										"contract": "contracts/Stakeable.sol:Stakeable",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 18,
										"contract": "contracts/Stakeable.sol:Stakeable",
										"label": "since",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 20,
										"contract": "contracts/Stakeable.sol:Stakeable",
										"label": "claimable",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Stakeholder)28_storage": {
								"encoding": "inplace",
								"label": "struct Stakeable.Stakeholder",
								"members": [
									{
										"astId": 23,
										"contract": "contracts/Stakeable.sol:Stakeable",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 27,
										"contract": "contracts/Stakeable.sol:Stakeable",
										"label": "address_stakes",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(Stake)21_storage)dyn_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Staked(address,uint256,uint256,uint256)": {
								"notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
							}
						},
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Constructor since this contract is not ment to be used without inheritance push once to stakeholders for it to work proplerly"
							},
							"hasStake(address)": {
								"notice": "hasStake is used to check if a account has stakes and the total amount along with all the seperate stakes"
							}
						},
						"notice": "Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Stakeable.sol": {
				"ast": {
					"absolutePath": "contracts/Stakeable.sol",
					"exportedSymbols": {
						"Stakeable": [
							352
						]
					},
					"id": 353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Stakeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "57:118:0",
								"text": " @notice Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities"
							},
							"fullyImplemented": true,
							"id": 352,
							"linearizedBaseContracts": [
								352
							],
							"name": "Stakeable",
							"nameLocation": "185:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "379:110:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 6,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "463:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "463:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage_ptr_$returns$_t_struct$_Stakeholder_$28_storage_$bound_to$_t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Stakeable.Stakeholder storage ref[] storage pointer) returns (struct Stakeable.Stakeholder storage ref)"
														}
													},
													"id": 9,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "463:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
														"typeString": "struct Stakeable.Stakeholder storage ref"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "463:19:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "203:157:0",
										"text": " @notice Constructor since this contract is not ment to be used without inheritance\n push once to stakeholders for it to work proplerly"
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "376:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "379:0:0"
									},
									"scope": 352,
									"src": "365:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Stakeable.Stake",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "753:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "745:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 13,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "745:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "775:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "767:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 15,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "767:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "since",
											"nameLocation": "799:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "791:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 17,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "791:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "claimable",
											"nameLocation": "921:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "913:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 19,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "913:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "730:5:0",
									"nodeType": "StructDefinition",
									"scope": 352,
									"src": "723:214:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakeable.Stakeholder",
									"id": 28,
									"members": [
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "1055:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "1047:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 22,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1047:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 27,
											"mutability": "mutable",
											"name": "address_stakes",
											"nameLocation": "1077:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "1069:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage_ptr",
												"typeString": "struct Stakeable.Stake[]"
											},
											"typeName": {
												"baseType": {
													"id": 25,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 24,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 21,
														"src": "1069:5:0"
													},
													"referencedDeclaration": 21,
													"src": "1069:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$21_storage_ptr",
														"typeString": "struct Stakeable.Stake"
													}
												},
												"id": 26,
												"nodeType": "ArrayTypeName",
												"src": "1069:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage_ptr",
													"typeString": "struct Stakeable.Stake[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stakeholder",
									"nameLocation": "1026:11:0",
									"nodeType": "StructDefinition",
									"scope": 352,
									"src": "1019:88:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Stakeable.StakingSummary",
									"id": 35,
									"members": [
										{
											"constant": false,
											"id": 30,
											"mutability": "mutable",
											"name": "total_amount",
											"nameLocation": "1286:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "1278:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 29,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1278:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "stakes",
											"nameLocation": "1317:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "1309:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage_ptr",
												"typeString": "struct Stakeable.Stake[]"
											},
											"typeName": {
												"baseType": {
													"id": 32,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 31,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 21,
														"src": "1309:5:0"
													},
													"referencedDeclaration": 21,
													"src": "1309:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$21_storage_ptr",
														"typeString": "struct Stakeable.Stake"
													}
												},
												"id": 33,
												"nodeType": "ArrayTypeName",
												"src": "1309:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage_ptr",
													"typeString": "struct Stakeable.Stake[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakingSummary",
									"nameLocation": "1253:14:0",
									"nodeType": "StructDefinition",
									"scope": 352,
									"src": "1246:85:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1337:225:0",
										"text": " @notice \n   This is a array where we store all Stakes that are performed on the Contract\n   The stakes for each address are stored at a certain index, the index can be found using the stakes mapping"
									},
									"id": 40,
									"mutability": "mutable",
									"name": "stakeholders",
									"nameLocation": "1590:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "1567:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
										"typeString": "struct Stakeable.Stakeholder[]"
									},
									"typeName": {
										"baseType": {
											"id": 38,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 37,
												"name": "Stakeholder",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "1567:11:0"
											},
											"referencedDeclaration": 28,
											"src": "1567:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stakeholder_$28_storage_ptr",
												"typeString": "struct Stakeable.Stakeholder"
											}
										},
										"id": 39,
										"nodeType": "ArrayTypeName",
										"src": "1567:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage_ptr",
											"typeString": "struct Stakeable.Stakeholder[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1608:110:0",
										"text": " @notice \n stakes is used to keep track of the INDEX for the stakers in the stakes array"
									},
									"id": 45,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "1760:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "1723:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 44,
										"keyType": {
											"id": 42,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1731:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1723:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 43,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1742:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1772:123:0",
										"text": " @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
									},
									"eventSelector": "b4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed",
									"id": 56,
									"name": "Staked",
									"nameLocation": "1907:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1930:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1914:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1944:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1936:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1960:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1952:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1975:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1967:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:72:0"
									},
									"src": "1901:85:0"
								},
								{
									"constant": false,
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "1992:192:0",
										"text": " @notice\nrewardPerHour is 1000 because it is used to represent 0.001, since we only use integer numbers\nThis will give users 0.1% reward for each staked token / H"
									},
									"id": 60,
									"mutability": "mutable",
									"name": "rewardPerHour",
									"nameLocation": "2206:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "2189:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 58,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2189:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030303030",
										"id": 59,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2222:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000_by_1",
											"typeString": "int_const 100000000"
										},
										"value": "100000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "2412:437:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 68,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "2502:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2502:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage_ptr_$returns$_t_struct$_Stakeholder_$28_storage_$bound_to$_t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Stakeable.Stakeholder storage ref[] storage pointer) returns (struct Stakeable.Stakeholder storage ref)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2502:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
														"typeString": "struct Stakeable.Stakeholder storage ref"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2502:19:0"
											},
											{
												"assignments": [
													74
												],
												"declarations": [
													{
														"constant": false,
														"id": 74,
														"mutability": "mutable",
														"name": "userIndex",
														"nameLocation": "2609:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 95,
														"src": "2601:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 73,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2601:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 79,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 75,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "2621:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2621:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2643:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2621:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2601:43:0"
											},
											{
												"expression": {
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 80,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "2701:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																	"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
																}
															},
															"id": 82,
															"indexExpression": {
																"id": 81,
																"name": "userIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "2714:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2701:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
																"typeString": "struct Stakeable.Stakeholder storage ref"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "user",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "2701:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 84,
														"name": "staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "2732:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2701:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2701:37:0"
											},
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 87,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "2789:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 89,
														"indexExpression": {
															"id": 88,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2796:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2789:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 90,
														"name": "userIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "2806:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2789:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "2789:26:0"
											},
											{
												"expression": {
													"id": 93,
													"name": "userIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 74,
													"src": "2832:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 67,
												"id": 94,
												"nodeType": "Return",
												"src": "2825:16:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2238:102:0",
										"text": " @notice _addStakeholder takes care of adding a stakeholder to the stakeholders array"
									},
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addStakeholder",
									"nameLocation": "2354:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "2378:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "2370:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2369:16:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "2404:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:9:0"
									},
									"scope": 352,
									"src": "2345:504:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "3098:1135:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 103,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3171:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3181:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3171:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b65206e6f7468696e67",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3184:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
																"typeString": "literal_string \"Cannot stake nothing\""
															},
															"value": "Cannot stake nothing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf1c60b013f9ac29f8f309d9d4a6fca81d3fd43f3c5f5ae6c527cd4fb58e3522",
																"typeString": "literal_string \"Cannot stake nothing\""
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3163:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3163:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "3163:44:0"
											},
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "3331:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 155,
														"src": "3323:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 115,
												"initialValue": {
													"baseExpression": {
														"id": 111,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "3339:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 114,
													"indexExpression": {
														"expression": {
															"id": 112,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3346:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3346:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3339:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3323:34:0"
											},
											{
												"assignments": [
													117
												],
												"declarations": [
													{
														"constant": false,
														"id": 117,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "3462:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 155,
														"src": "3454:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 120,
												"initialValue": {
													"expression": {
														"id": 118,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "3474:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "3474:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3454:35:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 121,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "3583:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3592:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3583:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 132,
												"nodeType": "IfStatement",
												"src": "3580:328:0",
												"trueBody": {
													"id": 131,
													"nodeType": "Block",
													"src": "3594:314:0",
													"statements": [
														{
															"expression": {
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 124,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "3862:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 126,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3886:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3886:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 125,
																		"name": "_addStakeholder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3870:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3870:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3862:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 130,
															"nodeType": "ExpressionStatement",
															"src": "3862:35:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 139,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4081:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4081:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 141,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "4093:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 142,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 117,
																	"src": "4102:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4112:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 138,
																"name": "Stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "4075:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Stake_$21_storage_ptr_$",
																	"typeString": "type(struct Stakeable.Stake storage pointer)"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4075:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																"typeString": "struct Stakeable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																"typeString": "struct Stakeable.Stake memory"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 133,
																	"name": "stakeholders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "4035:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																		"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
																	}
																},
																"id": 135,
																"indexExpression": {
																	"id": 134,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "4048:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4035:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
																	"typeString": "struct Stakeable.Stakeholder storage ref"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "address_stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "4035:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage",
																"typeString": "struct Stakeable.Stake storage ref[] storage ref"
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4035:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$21_storage_$dyn_storage_ptr_$_t_struct$_Stake_$21_storage_$returns$__$bound_to$_t_array$_t_struct$_Stake_$21_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Stakeable.Stake storage ref[] storage pointer,struct Stakeable.Stake storage ref)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4035:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4035:80:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 148,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4189:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4189:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 150,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "4201:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 151,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "4210:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 152,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "4216:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 147,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "4182:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4182:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "EmitStatement",
												"src": "4177:49:0"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "2855:197:0",
										"text": " @notice\n _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n StakeID "
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stake",
									"nameLocation": "3066:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3081:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "3073:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3072:17:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3098:0:0"
									},
									"scope": 352,
									"src": "3057:1176:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "4515:715:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 169,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 165,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "5130:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 166,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "5130:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"expression": {
																								"id": 167,
																								"name": "_current_stake",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 160,
																								"src": "5148:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																									"typeString": "struct Stakeable.Stake memory"
																								}
																							},
																							"id": 168,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "since",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 18,
																							"src": "5148:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5130:38:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 170,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5129:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5172:7:0",
																				"subdenomination": "hours",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3600_by_1",
																					"typeString": "int_const 3600"
																				},
																				"value": "1"
																			},
																			"src": "5129:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 173,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5128:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"id": 174,
																		"name": "_current_stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 160,
																		"src": "5183:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																			"typeString": "struct Stakeable.Stake memory"
																		}
																	},
																	"id": 175,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "5183:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5128:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 177,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5127:78:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 178,
														"name": "rewardPerHour",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "5208:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5127:94:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 180,
												"nodeType": "Return",
												"src": "5120:101:0"
											}
										]
									},
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "4239:180:0",
										"text": " @notice\n calculateStakeReward is used to calculate how much a user should be rewarded for their stakes\n and the duration the stake has been active"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakeReward",
									"nameLocation": "4435:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "_current_stake",
												"nameLocation": "4469:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "4456:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
													"typeString": "struct Stakeable.Stake"
												},
												"typeName": {
													"id": 159,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 158,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 21,
														"src": "4456:5:0"
													},
													"referencedDeclaration": 21,
													"src": "4456:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$21_storage_ptr",
														"typeString": "struct Stakeable.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4455:29:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "4507:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4506:9:0"
									},
									"scope": 352,
									"src": "4426:804:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "5654:1094:0",
										"statements": [
											{
												"assignments": [
													193
												],
												"declarations": [
													{
														"constant": false,
														"id": 193,
														"mutability": "mutable",
														"name": "user_index",
														"nameLocation": "5746:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 273,
														"src": "5738:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 192,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5738:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 198,
												"initialValue": {
													"baseExpression": {
														"id": 194,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "5759:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 197,
													"indexExpression": {
														"expression": {
															"id": 195,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5766:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5766:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5759:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5738:39:0"
											},
											{
												"assignments": [
													201
												],
												"declarations": [
													{
														"constant": false,
														"id": 201,
														"mutability": "mutable",
														"name": "current_stake",
														"nameLocation": "5800:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 273,
														"src": "5787:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
															"typeString": "struct Stakeable.Stake"
														},
														"typeName": {
															"id": 200,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 199,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 21,
																"src": "5787:5:0"
															},
															"referencedDeclaration": 21,
															"src": "5787:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$21_storage_ptr",
																"typeString": "struct Stakeable.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 208,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 202,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "5816:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																	"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
																}
															},
															"id": 204,
															"indexExpression": {
																"id": 203,
																"name": "user_index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5829:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5816:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
																"typeString": "struct Stakeable.Stakeholder storage ref"
															}
														},
														"id": 205,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "address_stakes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "5816:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage",
															"typeString": "struct Stakeable.Stake storage ref[] storage ref"
														}
													},
													"id": 207,
													"indexExpression": {
														"id": 206,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "5856:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5816:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$21_storage",
														"typeString": "struct Stakeable.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5787:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 210,
																	"name": "current_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "5880:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																		"typeString": "struct Stakeable.Stake memory"
																	}
																},
																"id": 211,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 16,
																"src": "5880:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 212,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "5904:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5880:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e673a2043616e6e6f74207769746864726177206d6f7265207468616e20796f752068617665207374616b6564",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5912:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee4d510ac6284dd4e6c153f8559b79fe87c2ac83701222cefa2b5a94cc595d9a",
																"typeString": "literal_string \"Staking: Cannot withdraw more than you have staked\""
															},
															"value": "Staking: Cannot withdraw more than you have staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee4d510ac6284dd4e6c153f8559b79fe87c2ac83701222cefa2b5a94cc595d9a",
																"typeString": "literal_string \"Staking: Cannot withdraw more than you have staked\""
															}
														],
														"id": 209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5872:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5872:93:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "5872:93:0"
											},
											{
												"assignments": [
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "6061:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 273,
														"src": "6053:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 217,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6053:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 222,
												"initialValue": {
													"arguments": [
														{
															"id": 220,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6091:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																"typeString": "struct Stakeable.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																"typeString": "struct Stakeable.Stake memory"
															}
														],
														"id": 219,
														"name": "calculateStakeReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "6070:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$21_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct Stakeable.Stake memory) view returns (uint256)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6070:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6053:52:0"
											},
											{
												"expression": {
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 223,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6170:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																"typeString": "struct Stakeable.Stake memory"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "6170:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 226,
																"name": "current_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "6193:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																	"typeString": "struct Stakeable.Stake memory"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 16,
															"src": "6193:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 228,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "6216:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6193:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6170:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "6170:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 232,
															"name": "current_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6310:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																"typeString": "struct Stakeable.Stake memory"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "6310:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6334:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6310:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 267,
													"nodeType": "Block",
													"src": "6421:286:0",
													"statements": [
														{
															"expression": {
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 245,
																					"name": "stakeholders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 40,
																					"src": "6494:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																						"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
																					}
																				},
																				"id": 247,
																				"indexExpression": {
																					"id": 246,
																					"name": "user_index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 193,
																					"src": "6507:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6494:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
																					"typeString": "struct Stakeable.Stakeholder storage ref"
																				}
																			},
																			"id": 248,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "address_stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 27,
																			"src": "6494:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage",
																				"typeString": "struct Stakeable.Stake storage ref[] storage ref"
																			}
																		},
																		"id": 250,
																		"indexExpression": {
																			"id": 249,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 187,
																			"src": "6534:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6494:46:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$21_storage",
																			"typeString": "struct Stakeable.Stake storage ref"
																		}
																	},
																	"id": 251,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "6494:53:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 252,
																		"name": "current_stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 201,
																		"src": "6550:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																			"typeString": "struct Stakeable.Stake memory"
																		}
																	},
																	"id": 253,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "6550:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6494:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 255,
															"nodeType": "ExpressionStatement",
															"src": "6494:76:0"
														},
														{
															"expression": {
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 256,
																					"name": "stakeholders",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 40,
																					"src": "6621:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																						"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
																					}
																				},
																				"id": 258,
																				"indexExpression": {
																					"id": 257,
																					"name": "user_index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 193,
																					"src": "6634:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6621:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
																					"typeString": "struct Stakeable.Stakeholder storage ref"
																				}
																			},
																			"id": 259,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "address_stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 27,
																			"src": "6621:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage",
																				"typeString": "struct Stakeable.Stake storage ref[] storage ref"
																			}
																		},
																		"id": 261,
																		"indexExpression": {
																			"id": 260,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 187,
																			"src": "6661:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6621:46:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$21_storage",
																			"typeString": "struct Stakeable.Stake storage ref"
																		}
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "since",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 18,
																	"src": "6621:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 263,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6676:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6676:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6621:70:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 266,
															"nodeType": "ExpressionStatement",
															"src": "6621:70:0"
														}
													]
												},
												"id": 268,
												"nodeType": "IfStatement",
												"src": "6307:400:0",
												"trueBody": {
													"id": 244,
													"nodeType": "Block",
													"src": "6336:80:0",
													"statements": [
														{
															"expression": {
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "6351:53:0",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 236,
																				"name": "stakeholders",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 40,
																				"src": "6358:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																					"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
																				}
																			},
																			"id": 238,
																			"indexExpression": {
																				"id": 237,
																				"name": "user_index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 193,
																				"src": "6371:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6358:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
																				"typeString": "struct Stakeable.Stakeholder storage ref"
																			}
																		},
																		"id": 239,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "address_stakes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "6358:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage",
																			"typeString": "struct Stakeable.Stake storage ref[] storage ref"
																		}
																	},
																	"id": 241,
																	"indexExpression": {
																		"id": 240,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "6398:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6358:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$21_storage",
																		"typeString": "struct Stakeable.Stake storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 243,
															"nodeType": "ExpressionStatement",
															"src": "6351:53:0"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 269,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6725:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 270,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "6734:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6725:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 191,
												"id": 272,
												"nodeType": "Return",
												"src": "6718:22:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "5236:332:0",
										"text": " @notice\n withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n Notice index of the stake is the users stake counter, starting at 0 for the first stake\n Will return the amount to MINT onto the acount\n Will also calculateStakeReward and reset timer"
									},
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_withdrawStake",
									"nameLocation": "5583:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5606:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5598:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "5622:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5614:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5597:31:0"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5646:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5646:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5645:9:0"
									},
									"scope": 352,
									"src": "5574:1174:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "6976:751:0",
										"statements": [
											{
												"assignments": [
													284
												],
												"declarations": [
													{
														"constant": false,
														"id": 284,
														"mutability": "mutable",
														"name": "totalStakeAmount",
														"nameLocation": "7074:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "7066:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 283,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7066:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"nodeType": "VariableDeclarationStatement",
												"src": "7066:24:0"
											},
											{
												"assignments": [
													288
												],
												"declarations": [
													{
														"constant": false,
														"id": 288,
														"mutability": "mutable",
														"name": "summary",
														"nameLocation": "7191:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "7169:29:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
															"typeString": "struct Stakeable.StakingSummary"
														},
														"typeName": {
															"id": 287,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 286,
																"name": "StakingSummary",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7169:14:0"
															},
															"referencedDeclaration": 35,
															"src": "7169:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$35_storage_ptr",
																"typeString": "struct Stakeable.StakingSummary"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 298,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7216:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 291,
																	"name": "stakeholders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "7219:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stakeholder_$28_storage_$dyn_storage",
																		"typeString": "struct Stakeable.Stakeholder storage ref[] storage ref"
																	}
																},
																"id": 295,
																"indexExpression": {
																	"baseExpression": {
																		"id": 292,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "7232:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 294,
																	"indexExpression": {
																		"id": 293,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 277,
																		"src": "7239:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7232:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7219:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stakeholder_$28_storage",
																	"typeString": "struct Stakeable.Stakeholder storage ref"
																}
															},
															"id": 296,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "address_stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "7219:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage",
																"typeString": "struct Stakeable.Stake storage ref[] storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_Stake_$21_storage_$dyn_storage",
																"typeString": "struct Stakeable.Stake storage ref[] storage ref"
															}
														],
														"id": 289,
														"name": "StakingSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "7201:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakingSummary_$35_storage_ptr_$",
															"typeString": "type(struct Stakeable.StakingSummary storage pointer)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7201:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
														"typeString": "struct Stakeable.StakingSummary memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7169:95:0"
											},
											{
												"body": {
													"id": 340,
													"nodeType": "Block",
													"src": "7385:219:0",
													"statements": [
														{
															"assignments": [
																313
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 313,
																	"mutability": "mutable",
																	"name": "availableReward",
																	"nameLocation": "7406:15:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 340,
																	"src": "7398:23:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 312,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7398:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 320,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"expression": {
																				"id": 315,
																				"name": "summary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 288,
																				"src": "7445:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
																					"typeString": "struct Stakeable.StakingSummary memory"
																				}
																			},
																			"id": 316,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 34,
																			"src": "7445:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct Stakeable.Stake memory[] memory"
																			}
																		},
																		"id": 318,
																		"indexExpression": {
																			"id": 317,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 300,
																			"src": "7460:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7445:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																			"typeString": "struct Stakeable.Stake memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																			"typeString": "struct Stakeable.Stake memory"
																		}
																	],
																	"id": 314,
																	"name": "calculateStakeReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "7424:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$21_memory_ptr_$returns$_t_uint256_$",
																		"typeString": "function (struct Stakeable.Stake memory) view returns (uint256)"
																	}
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7424:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7398:65:0"
														},
														{
															"expression": {
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 321,
																				"name": "summary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 288,
																				"src": "7476:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
																					"typeString": "struct Stakeable.StakingSummary memory"
																				}
																			},
																			"id": 324,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakes",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 34,
																			"src": "7476:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct Stakeable.Stake memory[] memory"
																			}
																		},
																		"id": 325,
																		"indexExpression": {
																			"id": 323,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 300,
																			"src": "7491:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7476:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																			"typeString": "struct Stakeable.Stake memory"
																		}
																	},
																	"id": 326,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimable",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 20,
																	"src": "7476:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 327,
																	"name": "availableReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "7506:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7476:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 329,
															"nodeType": "ExpressionStatement",
															"src": "7476:45:0"
														},
														{
															"expression": {
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 330,
																	"name": "totalStakeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "7534:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 331,
																		"name": "totalStakeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "7553:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 332,
																					"name": "summary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 288,
																					"src": "7570:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
																						"typeString": "struct Stakeable.StakingSummary memory"
																					}
																				},
																				"id": 333,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "7570:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct Stakeable.Stake memory[] memory"
																				}
																			},
																			"id": 335,
																			"indexExpression": {
																				"id": 334,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 300,
																				"src": "7585:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7570:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$21_memory_ptr",
																				"typeString": "struct Stakeable.Stake memory"
																			}
																		},
																		"id": 336,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7570:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7553:41:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7534:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 339,
															"nodeType": "ExpressionStatement",
															"src": "7534:60:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 303,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "7351:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 304,
																"name": "summary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "7355:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
																	"typeString": "struct Stakeable.StakingSummary memory"
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "7355:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stake_$21_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Stakeable.Stake memory[] memory"
															}
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7355:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7351:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 341,
												"initializationExpression": {
													"assignments": [
														300
													],
													"declarations": [
														{
															"constant": false,
															"id": 300,
															"mutability": "mutable",
															"name": "s",
															"nameLocation": "7344:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 341,
															"src": "7336:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 299,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7336:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 302,
													"initialValue": {
														"hexValue": "30",
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7348:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7336:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 308,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "7378:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7383:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "7378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 311,
													"nodeType": "ExpressionStatement",
													"src": "7378:6:0"
												},
												"nodeType": "ForStatement",
												"src": "7331:273:0"
											},
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 342,
															"name": "summary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "7657:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
																"typeString": "struct Stakeable.StakingSummary memory"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 30,
														"src": "7657:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 345,
														"name": "totalStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "7680:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7657:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "7657:39:0"
											},
											{
												"expression": {
													"id": 348,
													"name": "summary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 288,
													"src": "7713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
														"typeString": "struct Stakeable.StakingSummary memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 349,
												"nodeType": "Return",
												"src": "7706:14:0"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "6755:139:0",
										"text": " @notice\n hasStake is used to check if a account has stakes and the total amount along with all the seperate stakes"
									},
									"functionSelector": "e73e14bf",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasStake",
									"nameLocation": "6908:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "6925:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "6917:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6917:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6916:17:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "6954:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakingSummary_$35_memory_ptr",
													"typeString": "struct Stakeable.StakingSummary"
												},
												"typeName": {
													"id": 280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 279,
														"name": "StakingSummary",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 35,
														"src": "6954:14:0"
													},
													"referencedDeclaration": 35,
													"src": "6954:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingSummary_$35_storage_ptr",
														"typeString": "struct Stakeable.StakingSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6953:23:0"
									},
									"scope": 352,
									"src": "6899:828:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 353,
							"src": "176:7554:0",
							"usedErrors": []
						}
					],
					"src": "32:7698:0"
				},
				"id": 0
			}
		}
	}
}